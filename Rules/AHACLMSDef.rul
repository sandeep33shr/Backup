        Dim iObjectInstanceCount
        
        Sub FindObjectInstanceCount(strScreenObjectName)
        	iObjectInstanceCount = 1
        
        	' strScreenObjectName is the object that is associate with this screen (if a child), or "" if the root screen.
        	If strScreenObjectName <> ""  Then
        		Dim instanceCount
        		
        		' How many instance of this object exist?
        		instanceCount = engine.count(strScreenObjectName)
        		
        		Dim i
        		for i = 1 to instanceCount
        			if engine.item(strScreenObjectName, i).item("OI").value = vAdditionalData(cAdditionalData_OIKey) then
        				iObjectInstanceCount = i
        			end if
        		next
        	End If
        End Sub

        Sub DefaultTextTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultCommentTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultIntegerTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CLng(strValue)
        End Sub

        
        Sub DefaultCheckboxTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanListTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanRadioTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	If InStr(1, LCase(strValue), "code:", 1) = 1 Then
        		' The default value has been specified as a code (code:<thecode>).
        		Dim code
        		Dim effectiveDate
        		Dim version
        		
        		code = Mid(strValue, Len("code:")+1)
        		effectiveDate = Now()
        		version = 1
        		
        		Dim listItemId
        		listItemId = Extras.GetField(strListCode, strListCode + "_Id", code, effectiveDate, version)
        		
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(listItemId)
        	Else
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        	End If
        End Sub

        
        Sub DefaultRateListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	' TODO.
        End Sub

        
        Sub DefaultDateTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	
        	Dim location
        	Dim Interval
        	Dim Duration
        	Dim DateValue
        	
        	'Upper case the input
        	DateValue = UCase(strValue)
        	'Check to see if we want data AND  Time
        	location = InStr(1,DateValue,"DATETIME")
        	if location > 0 then
        		DateValue=  CDate(FormatDateTime(Now,0)) 'use the standard vb datetime
        	End If
        	'Check to see if TODAY is specified as a modifier
        	location  = InStr(1,DateValue,"TODAY")
        	If location > 0 Then
        		'Determine if we are adding values
        		location  = InStr(1,DateValue,"+")
        		If location > 0 Then 
        			Interval = Mid(DateValue,location + 1,1)
        			
        			If Interval = "Y" Then
        				Interval = "YYYY"
        			End If
        			
        			If Interval <> "" Then 
        				Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        				DateValue = DateAdd(Interval,Duration,CDate(FormatDateTime(Now,2)))	
        				
        			Else
        				'No Interval specified 
        				'Need an error here!!!!
        			End If	
        		Else 
        			'Check to see if we are subtracting values
        			location  =InStr(1,DateValue,"-")
        			If location > 0  Then 
        				Interval = Mid(DateValue,location + 1,1)
        				
        				If Interval <> "" Then 
        					Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        					DateValue = DateAdd(Interval, Duration * -1,CDate(FormatDateTime(Now,2)))	
        				Else
        					'No Interval specified 
        					'Need an error here!!!!
        				End If
        			Else
        				'No Function specified, so assume we are just using today's date as a shortdate
        				DateValue = CDate(FormatDateTime(Now,2))
        			End If
        			
        		End If
        		
        	End If	
        	
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDate(DateValue)
        End Sub

        
        Sub DefaultCurrencyTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

        
        Sub DefaultPercentageTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

Sub WebRequired(bIsOnStart)
	If bIsOnStart = True Then
		Engine.NewObject("GENERAL")
		Engine.NewObject("AHACLM")
	End If
End Sub

Sub onScreenLogic(bIsOnStart)
        If bIsOnStart = True Then
        		'Instantiate Risk object(s)
        		Extras.RiskDataEngine.NewObject("EMPDE")
        		Extras.RiskDataEngine.NewObject("ADDRESS")
        
        		'Instantiate Claims object(s)
        		Engine.NewObject("AHACLM")
        
        		Dim RiskObject, ClaimObject, CDOB,RiskChildObject,OverviewRiskObject, RiskAddressObject, ClaimAddressObject, RiskExtObject
        
        		RiskObject = "EMPDE"
        		ClaimObject = "AHACLM"
        		RiskAddressObject = "ADDRESS"
        		ClaimAddressObject = "GENERAL"
        		RiskExtObject = "AHEXT"
        		
        		OverviewRiskObject = "OVE"
        
                '---------------Address---------------'
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"ADDRESSLIST","ADDRESSLIST")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"SITEADDRESSLIST","SITEADDRESSLIST")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"HOMEADDRESSLIST","HOMEADDRESSLIST")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"B_ADDRESSLIST","B_ADDRESSLIST")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"LINE1","LINE1")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"SUBURB","SUBURB")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"TOWN","TOWN")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"POSTCODE","POSTCODE")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"REGION","REGION")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"COUNTRY","COUNTRY")
        		Call ToClaim(RiskAddressObject,ClaimAddressObject,"AREACODE","AREACODE")		
        
                '---------------Dates---------------'
        		Call ToClaim(RiskObject,ClaimObject,"RISK_ATTACH_DATE","RISK_ATTACH_DATE")
        		Call ToClaim(RiskObject,ClaimObject,"EFFECTIVEDATE","EFFECTIVEDATE")		
        
                '---------------Personal Accident---------------'
        		Call ToClaim(RiskObject,ClaimObject,"MAOLL","MAOLL")
        		Call ToClaim(RiskObject,ClaimObject,"PMAOLL","PMAOLL")
        		Call ToClaim(RiskObject,ClaimObject,"MAOAL","MAOAL")
        		Call ToClaim(RiskObject,ClaimObject,"PMAOAL","PMAOAL")
        		Call ToClaim(RiskObject,ClaimObject,"OAL","OAL")
        		
        		'--------------Overview----------------------
        		Call ToClaim(OverviewRiskObject,ClaimObject,"BOL","BOL")
        		Call ToClaim(OverviewRiskObject,ClaimObject,"TAE","TAE")
        		Call ToClaim(OverviewRiskObject,ClaimObject,"TP","TP")
        		
        		'-------------Employee Details---------------
        		Call ToClaim(RiskObject,ClaimObject,"OCCUP","OCCUP")
        		Call ToClaim(RiskObject,ClaimObject,"OCC_DESC","OCC_DESC")
        		Call ToClaim(RiskObject,ClaimObject,"CAT","CAT")
        		Call ToClaim(RiskObject,ClaimObject,"NME","NME")
        		Call ToClaim(RiskObject,ClaimObject,"SNE","SNE")
        		Call ToClaim(RiskObject,ClaimObject,"DOB","DOB")
        		Call ToClaim(RiskObject,ClaimObject,"INU","INU")
        		Call ToClaim(RiskObject,ClaimObject,"GEN","GEN")
        		Call ToClaim(RiskObject,ClaimObject,"NOE","NOE")
        		Call ToClaim(RiskObject,ClaimObject,"CPE","CPE")
        		
        		'-----------Cover Details----------------------
        		Call ToClaim(RiskObject,ClaimObject,"DEATH","DEATH")
        		Call ToClaim(RiskObject,ClaimObject,"DMUL","DMUL")
        		Call ToClaim(RiskObject,ClaimObject,"DLOI","DLOI")
        		
        		Call ToClaim(RiskObject,ClaimObject,"PD","PD")
        		Call ToClaim(RiskObject,ClaimObject,"PDMUL","PDMUL")
        		Call ToClaim(RiskObject,ClaimObject,"PDLOI","PDLOI")
        		
        		Call ToClaim(RiskObject,ClaimObject,"TTD","TTD")
        		Call ToClaim(RiskObject,ClaimObject,"TTDMUL","TTDMUL")
        		Call ToClaim(RiskObject,ClaimObject,"TTDLOI","TTDLOI")
        		Call ToClaim(RiskObject,ClaimObject,"TTDNOWEE","TTDNOWEE")
        		Call ToClaim(RiskObject,ClaimObject,"TTDFAP","TTDFAP")
        		
        		Call ToClaim(RiskObject,ClaimObject,"TPD","TPD")
        		Call ToClaim(RiskObject,ClaimObject,"TPDMUL","TPDMUL")
        		Call ToClaim(RiskObject,ClaimObject,"TPDLOI","TPDLOI")
        		Call ToClaim(RiskObject,ClaimObject,"TPDNOWEEP","TPDNOWEEP")
        		Call ToClaim(RiskObject,ClaimObject,"TPDTIME","TPDTIME")
        		
        		Call ToClaim(RiskObject,ClaimObject,"MDCLEXPNS","MDCLEXPNS")
        		Call ToClaim(RiskObject,ClaimObject,"MDCALEXPNS","MDCALEXPNS")
        		Call ToClaim(RiskObject,ClaimObject,"MEDFAP","MEDFAP")
        		
        		'-------------------Extensions------------------------
        		Call ToClaim(RiskExtObject,ClaimObject,"HVACCEXP","HVACCEXP")
        		Call ToClaim(RiskExtObject,ClaimObject,"HIVLIMT","HIVLIMT")
        		
        		Call ToClaim(RiskExtObject,ClaimObject,"HSPTL","HSPTL")
        		Call ToClaim(RiskExtObject,ClaimObject,"HSPTMEX","HSPTMEX")
        		Call ToClaim(RiskExtObject,ClaimObject,"LMTIND","LMTIND")
        		Call ToClaim(RiskExtObject,ClaimObject,"HSPPERIOD","HSPPERIOD")
        		
        		
        		Call ToClaim(RiskExtObject,ClaimObject,"IMR","IMR")
        
        		Call ToClaim(RiskExtObject,ClaimObject,"SRSILL","SRSILL")
        		Call ToClaim(RiskExtObject,ClaimObject,"SRSLMTIND","SRSLMTIND")
        		Call ToClaim(RiskExtObject,ClaimObject,"SRSFAP","SRSFAP")	
        		Call ToClaim(RiskExtObject,ClaimObject,"SRSFAPAM","SRSFAPAM")
        		
        		Call ToClaim(RiskExtObject,ClaimObject,"TTDSCK","TTDSCK")		
        		Call ToClaim(RiskExtObject,ClaimObject,"TTDLIMT","TTDSCKLIMT")
        		Call ToClaim(RiskExtObject,ClaimObject,"TTDFAP","TTDSCKFAP")	
        		Call ToClaim(RiskExtObject,ClaimObject,"TTDFAPP","TTDSCKFAPP")
        		
        		Call ToClaim(RiskExtObject,ClaimObject,"WRRISK","WRRISK")
        		
        		'-------------Assistance Services----------------------		
        		Call ToClaim(RiskObject,ClaimObject,"HIVACCEXP","HIVACCEXP")
        		Call ToClaim(RiskObject,ClaimObject,"HIVNEMP","HIVNEMP")
        		
        		Call ToClaim(RiskObject,ClaimObject,"ACCEXPASS","ACCEXPASS")
        		Call ToClaim(RiskObject,ClaimObject,"ACCNEMPS","ACCNEMPS")
        		
        		'------------Financial Overview-------------------------
        		Call ToClaim(RiskObject,ClaimObject,"TOT_SI","TOT_SI")
        		Call ToClaim(RiskObject,ClaimObject,"TOT_RI_SI","TOT_RI_SI")
        		
        		'---------------Co Insurance Detail Child Screen---------------'
        
        		Dim ClaimChild, Cnt, nIndex
        		RiskChildObject = "AHCOI"
        		ClaimChild = "AHCOI"
        		Cnt = Extras.RiskDataEngine.Count(RiskChildObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"CO_INM","CO_INM")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"Per_SHARE","Per_SHARE")
        		Next
                
        		'---------------Personal Accident Endorsement Child Screen---------------'
        
        		RiskChildObject = "AH_ENDOSE"
        		ClaimChild = "AH_ENDOSE"
        		Cnt = Extras.RiskDataEngine.Count(RiskChildObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"ENDORSE_CAP","ENDORSE_CAP")
        		Next
        		
        		'---------------Personal Accident Notes (Not Printed on Schedule) Child Screen---------------'
        		
        		RiskChildObject = "AHNOTES"
        		ClaimChild = "AHNOTES"
        		Cnt = Extras.RiskDataEngine.Count(RiskChildObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"DATE_CREATED","DATE_CREATED")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"CREATED_BY","CREATED_BY")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"COVER_TYPE","COVER_TYPE")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"NOTE_DESCRIPTION","NOTE_DESCRIPTION")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"NOTE_DETAILS","NOTE_DETAILS")
        		Next
        		
        		'---------------Accidental Health Notes (Printed On Schedule) Child Screen---------------'
        				
        		RiskChildObject = "AHSNOTES"
        		ClaimChild = "AHSNOTES"
        		Cnt = Extras.RiskDataEngine.Count(RiskChildObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"DATE_CREATED","DATE_CREATED")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"CREATED_BY","CREATED_BY")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"COVER_TYPE","COVER_TYPE")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"NOTE_DESCRIPTION","NOTE_DESCRIPTION")
        			Call ToChildClaim(RiskChildObject,ClaimObject,ClaimChild,nIndex,"NOTE_DETAILS","NOTE_DETAILS")
        
        		Next
        		
        	
        		
        		Call DoInstanceCount
         End If
        End Sub

        Function ToClaim(RObject, CObject, RPropName,CPropName)
        	Dim Val	
        	Val = Extras.RiskDataEngine.Item(RObject).Item(RPropName).Value
        	Engine.Item(CObject).Item(CPropName).Value = Val
        End Function
        
        Function ToChildClaim(RChild, CParent, Cobject, Index, RPropName,CPropName)
        	Dim Val
        	Val = Extras.RiskDataEngine.Item(RChild,Index).Item(RPropName).Value
        	Engine.Item(CParent).Item(CObject, Index).Item(CPropName).Value = Val
        End Function
        
        Sub DoInstanceCount
        ' The ScreenMain rule is added to every screen automatically.
        
        
        Call FindObjectInstanceCount("")
End Sub

Sub onValidate_GENERAL__THIRDPARTY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "THIRDPARTY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__SALVAGE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "SALVAGE", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__RECOVERY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "RECOVERY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_SPM(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_SPM", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_THRDTLS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_THRDTLS", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_NAMAPP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_NAMAPP", "0", "{listcode}")
        End If
End Sub

Sub DoDefaults(bIsOnStart)
    Call WebRequired(bIsOnStart)
    Call onScreenLogic(bIsOnStart)
    Call onValidate_GENERAL__THIRDPARTY(bIsOnStart)
    Call onValidate_GENERAL__SALVAGE(bIsOnStart)
    Call onValidate_GENERAL__RECOVERY(bIsOnStart)
    Call onValidate_GENERAL__IS_SPM(bIsOnStart)
    Call onValidate_GENERAL__IS_THRDTLS(bIsOnStart)
    Call onValidate_GENERAL__IS_NAMAPP(bIsOnStart)
End Sub

Sub Start()
    Call DoDefaults(True)
End Sub

Sub Main()
    Call DoDefaults(False)
End Sub

