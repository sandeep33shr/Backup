        Dim iObjectInstanceCount
        
        Sub FindObjectInstanceCount(strScreenObjectName)
        	iObjectInstanceCount = 1
        
        	' strScreenObjectName is the object that is associate with this screen (if a child), or "" if the root screen.
        	If strScreenObjectName <> ""  Then
        		Dim instanceCount
        		
        		' How many instance of this object exist?
        		instanceCount = engine.count(strScreenObjectName)
        		
        		Dim i
        		for i = 1 to instanceCount
        			if engine.item(strScreenObjectName, i).item("OI").value = vAdditionalData(cAdditionalData_OIKey) then
        				iObjectInstanceCount = i
        			end if
        		next
        	End If
        End Sub

        Sub DefaultTextTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultCommentTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultIntegerTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CLng(strValue)
        End Sub

        
        Sub DefaultCheckboxTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanListTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanRadioTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	If InStr(1, LCase(strValue), "code:", 1) = 1 Then
        		' The default value has been specified as a code (code:<thecode>).
        		Dim code
        		Dim effectiveDate
        		Dim version
        		
        		code = Mid(strValue, Len("code:")+1)
        		effectiveDate = Now()
        		version = 1
        		
        		Dim listItemId
        		listItemId = Extras.GetField(strListCode, strListCode + "_Id", code, effectiveDate, version)
        		
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(listItemId)
        	Else
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        	End If
        End Sub

        
        Sub DefaultRateListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	' TODO.
        End Sub

        
        Sub DefaultDateTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	
        	Dim location
        	Dim Interval
        	Dim Duration
        	Dim DateValue
        	
        	'Upper case the input
        	DateValue = UCase(strValue)
        	'Check to see if we want data AND  Time
        	location = InStr(1,DateValue,"DATETIME")
        	if location > 0 then
        		DateValue=  CDate(FormatDateTime(Now,0)) 'use the standard vb datetime
        	End If
        	'Check to see if TODAY is specified as a modifier
        	location  = InStr(1,DateValue,"TODAY")
        	If location > 0 Then
        		'Determine if we are adding values
        		location  = InStr(1,DateValue,"+")
        		If location > 0 Then 
        			Interval = Mid(DateValue,location + 1,1)
        			
        			If Interval = "Y" Then
        				Interval = "YYYY"
        			End If
        			
        			If Interval <> "" Then 
        				Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        				DateValue = DateAdd(Interval,Duration,CDate(FormatDateTime(Now,2)))	
        				
        			Else
        				'No Interval specified 
        				'Need an error here!!!!
        			End If	
        		Else 
        			'Check to see if we are subtracting values
        			location  =InStr(1,DateValue,"-")
        			If location > 0  Then 
        				Interval = Mid(DateValue,location + 1,1)
        				
        				If Interval <> "" Then 
        					Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        					DateValue = DateAdd(Interval, Duration * -1,CDate(FormatDateTime(Now,2)))	
        				Else
        					'No Interval specified 
        					'Need an error here!!!!
        				End If
        			Else
        				'No Function specified, so assume we are just using today's date as a shortdate
        				DateValue = CDate(FormatDateTime(Now,2))
        			End If
        			
        		End If
        		
        	End If	
        	
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDate(DateValue)
        End Sub

        
        Sub DefaultCurrencyTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

        
        Sub DefaultPercentageTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

Sub WebRequired(bIsOnStart)
	If bIsOnStart = True Then
		Engine.NewObject("STBEN")
	End If
End Sub

Sub onScreenLogic(bIsOnStart)
        ' The ScreenMain rule is added to every screen automatically.
        
        
        Call FindObjectInstanceCount("")
End Sub

Sub onValidate_STBEN__FLAT_PREMIUM(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "FLAT_PREMIUM", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__TOTALAE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCurrencyTo("STBEN", "TOTALAE", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__DEATH(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "DEATH", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__PDT(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "PDT", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__TDPTDISB(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "TDPTDISB", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__TEMPPART(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "TEMPPART", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__MDCLEXPNS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "MDCLEXPNS", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__TEMP_DAYS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultIntegerTo("STBEN", "TEMP_DAYS", "7", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__HVACCEXP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "HVACCEXP", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__HSPTL(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "HSPTL", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__SRSILL(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "SRSILL", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__SRSLMTIND(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCurrencyTo("STBEN", "SRSLMTIND", "150000", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__TTDSCK(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "TTDSCK", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__WRRISK(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "WRRISK", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__HIVACCEXP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "HIVACCEXP", "0", "{listcode}")
        End If
End Sub

Sub onValidate_STBEN__ACCEXPASS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("STBEN", "ACCEXPASS", "0", "{listcode}")
        End If
End Sub

Sub DoDefaults(bIsOnStart)
    Call WebRequired(bIsOnStart)
    Call onScreenLogic(bIsOnStart)
    Call onValidate_STBEN__FLAT_PREMIUM(bIsOnStart)
    Call onValidate_STBEN__TOTALAE(bIsOnStart)
    Call onValidate_STBEN__DEATH(bIsOnStart)
    Call onValidate_STBEN__PDT(bIsOnStart)
    Call onValidate_STBEN__TDPTDISB(bIsOnStart)
    Call onValidate_STBEN__TEMPPART(bIsOnStart)
    Call onValidate_STBEN__MDCLEXPNS(bIsOnStart)
    Call onValidate_STBEN__TEMP_DAYS(bIsOnStart)
    Call onValidate_STBEN__HVACCEXP(bIsOnStart)
    Call onValidate_STBEN__HSPTL(bIsOnStart)
    Call onValidate_STBEN__SRSILL(bIsOnStart)
    Call onValidate_STBEN__SRSLMTIND(bIsOnStart)
    Call onValidate_STBEN__TTDSCK(bIsOnStart)
    Call onValidate_STBEN__WRRISK(bIsOnStart)
    Call onValidate_STBEN__HIVACCEXP(bIsOnStart)
    Call onValidate_STBEN__ACCEXPASS(bIsOnStart)
End Sub

Sub Start()
    Call DoDefaults(True)
End Sub

Sub Main()
    Call DoDefaults(False)
End Sub

