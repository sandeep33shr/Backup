        Dim iObjectInstanceCount
        
        Sub FindObjectInstanceCount(strScreenObjectName)
        	iObjectInstanceCount = 1
        
        	' strScreenObjectName is the object that is associate with this screen (if a child), or "" if the root screen.
        	If strScreenObjectName <> ""  Then
        		Dim instanceCount
        		
        		' How many instance of this object exist?
        		instanceCount = engine.count(strScreenObjectName)
        		
        		Dim i
        		for i = 1 to instanceCount
        			if engine.item(strScreenObjectName, i).item("OI").value = vAdditionalData(cAdditionalData_OIKey) then
        				iObjectInstanceCount = i
        			end if
        		next
        	End If
        End Sub

        Sub DefaultTextTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultCommentTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultIntegerTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CLng(strValue)
        End Sub

        
        Sub DefaultCheckboxTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanListTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanRadioTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	If InStr(1, LCase(strValue), "code:", 1) = 1 Then
        		' The default value has been specified as a code (code:<thecode>).
        		Dim code
        		Dim effectiveDate
        		Dim version
        		
        		code = Mid(strValue, Len("code:")+1)
        		effectiveDate = Now()
        		version = 1
        		
        		Dim listItemId
        		listItemId = Extras.GetField(strListCode, strListCode + "_Id", code, effectiveDate, version)
        		
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(listItemId)
        	Else
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        	End If
        End Sub

        
        Sub DefaultRateListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	' TODO.
        End Sub

        
        Sub DefaultDateTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	
        	Dim location
        	Dim Interval
        	Dim Duration
        	Dim DateValue
        	
        	'Upper case the input
        	DateValue = UCase(strValue)
        	'Check to see if we want data AND  Time
        	location = InStr(1,DateValue,"DATETIME")
        	if location > 0 then
        		DateValue=  CDate(FormatDateTime(Now,0)) 'use the standard vb datetime
        	End If
        	'Check to see if TODAY is specified as a modifier
        	location  = InStr(1,DateValue,"TODAY")
        	If location > 0 Then
        		'Determine if we are adding values
        		location  = InStr(1,DateValue,"+")
        		If location > 0 Then 
        			Interval = Mid(DateValue,location + 1,1)
        			
        			If Interval = "Y" Then
        				Interval = "YYYY"
        			End If
        			
        			If Interval <> "" Then 
        				Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        				DateValue = DateAdd(Interval,Duration,CDate(FormatDateTime(Now,2)))	
        				
        			Else
        				'No Interval specified 
        				'Need an error here!!!!
        			End If	
        		Else 
        			'Check to see if we are subtracting values
        			location  =InStr(1,DateValue,"-")
        			If location > 0  Then 
        				Interval = Mid(DateValue,location + 1,1)
        				
        				If Interval <> "" Then 
        					Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        					DateValue = DateAdd(Interval, Duration * -1,CDate(FormatDateTime(Now,2)))	
        				Else
        					'No Interval specified 
        					'Need an error here!!!!
        				End If
        			Else
        				'No Function specified, so assume we are just using today's date as a shortdate
        				DateValue = CDate(FormatDateTime(Now,2))
        			End If
        			
        		End If
        		
        	End If	
        	
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDate(DateValue)
        End Sub

        
        Sub DefaultCurrencyTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

        
        Sub DefaultPercentageTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

Sub WebRequired(bIsOnStart)
	If bIsOnStart = True Then
		Engine.NewObject("MOTORCLAIM")
	End If
End Sub

Sub onScreenLogic(bIsOnStart)
        If bIsOnStart = True Then
        		'Instantiate Risk object(s)
        		Extras.RiskDataEngine.NewObject("MOTOR")
        		Extras.RiskDataEngine.NewObject("ADDRESS")
        
        		'Instantiate Claims object(s)
        		Engine.NewObject("MOTORCLAIM")
        
        		'---------------------------------------------------
        		'---START: Non-child screen properties population---	
        		'---------------------------------------------------
        		Dim address
        		address = Extras.RiskDataEngine.Item("ADDRESS").Item("LINE1").Value
        		Engine.Item("MOTORCLAIM").Item("ADDRESS").Value = address
        
        		Dim RiskObject, ClaimObject, CDOB
        
        		RiskObject = "MOTOR"
        		ClaimObject = "MOTORCLAIM"
        
                '---------------Cover Details---------------'
        		Call ToClaim(RiskObject,ClaimObject,"VEHTYPE")
        		Call ToClaim(RiskObject,ClaimObject,"TYPE_USE")
        		Call ToClaim(RiskObject,ClaimObject,"COVERTYPE")
        		Call ToClaim(RiskObject,ClaimObject,"UNSUPPORTED")
        		Call ToClaim(RiskObject,ClaimObject,"TMP_TOGGLE")
        		Call ToClaim(RiskObject,ClaimObject,"TMP_COVDETS")
        		Call ToClaim(RiskObject,ClaimObject,"TMP_ISCVANTRL2")
        		Call ToClaim(RiskObject,ClaimObject,"TMP_DRIVER2")
        		Call ToClaim(RiskObject,ClaimObject,"TMP_ISMTRXT2")
        		CDOB = Extras.DateOfBirth
        		Engine.Item("MOTORCLAIM").Item("CDOB").Value = CDOB
        
        
                '---------------Vehicle Details---------------'
        		Call ToClaim(RiskObject,ClaimObject,"VEH_TYPE")
        		Call ToClaim(RiskObject,ClaimObject,"MMCODE")
        		Call ToClaim(RiskObject,ClaimObject,"MAKEMODEL")
        		Call ToClaim(RiskObject,ClaimObject,"MAKE")
        		Call ToClaim(RiskObject,ClaimObject,"MODEL")
        		Call ToClaim(RiskObject,ClaimObject,"BODY_TYPE")
        		Call ToClaim(RiskObject,ClaimObject,"CUBICCAP")
        		Call ToClaim(RiskObject,ClaimObject,"REG_NO")
        		Call ToClaim(RiskObject,ClaimObject,"CHASSIS")
        		Call ToClaim(RiskObject,ClaimObject,"ENGINE_NO")
        		Call ToClaim(RiskObject,ClaimObject,"VIN_NO")
        		Call ToClaim(RiskObject,ClaimObject,"VEH_CAT")
        		Call ToClaim(RiskObject,ClaimObject,"MXVEH_CAT")
        		Call ToClaim(RiskObject,ClaimObject,"CURRKM")
        		Call ToClaim(RiskObject,ClaimObject,"TYPE_BIKE")
        		Call ToClaim(RiskObject,ClaimObject,"MAN_YEAR")
        		Call ToClaim(RiskObject,ClaimObject,"FUEL")
        		Call ToClaim(RiskObject,ClaimObject,"RETAILVAL")
        		Call ToClaim(RiskObject,ClaimObject,"VEH_VALUE")
        		Call ToClaim(RiskObject,ClaimObject,"EXTRA")
        		Call ToClaim(RiskObject,ClaimObject,"EXTRA_VAL")
        		Call ToClaim(RiskObject,ClaimObject,"RADIO")
        		Call ToClaim(RiskObject,ClaimObject,"RADIO_VAL")
        		Call ToClaim(RiskObject,ClaimObject,"TOT_SI")
        
                '---------------Security---------------'
        		Call ToClaim(RiskObject,ClaimObject,"GARAGE")
        		Call ToClaim(RiskObject,ClaimObject,"TRACK")
        		Call ToClaim(RiskObject,ClaimObject,"IMMOB")
                Call ToClaim(RiskObject,ClaimObject,"ALARM")
        		Call ToClaim(RiskObject,ClaimObject,"GEAR_LOCK")
        
                '---------------Driver Details---------------'
        		Call ToClaim(RiskObject,ClaimObject,"MAIN_DRIVER")
                Call ToClaim(RiskObject,ClaimObject,"MARITAL")
        		Call ToClaim(RiskObject,ClaimObject,"GENDER")
        		Call ToClaim(RiskObject,ClaimObject,"DOB")
                Call ToClaim(RiskObject,ClaimObject,"LICENSE_DATE")
        
                '---------------Insurance History---------------'
        		Call ToClaim(RiskObject,ClaimObject,"IS_INCIDENTS")
                Call ToClaim(RiskObject,ClaimObject,"CURINS")
        		Call ToClaim(RiskObject,ClaimObject,"ONE_YEAR")
        		Call ToClaim(RiskObject,ClaimObject,"TWO_YEAR")
                Call ToClaim(RiskObject,ClaimObject,"THREE_YEAR")
        
                '---------------Excesses---------------'
        		Call ToClaim(RiskObject,ClaimObject,"EXCESSPER")
        		Call ToClaim(RiskObject,ClaimObject,"EXCESSAMNT")
                Call ToClaim(RiskObject,ClaimObject,"SELEXCESSAMNT")
        		Call ToClaim(RiskObject,ClaimObject,"VOLUNTARY")
        		Call ToClaim(RiskObject,ClaimObject,"WSCRNEXPER")
                Call ToClaim(RiskObject,ClaimObject,"WSCRNEXAMNT")
        		Call ToClaim(RiskObject,ClaimObject,"AUDIO")
        		Call ToClaim(RiskObject,ClaimObject,"THEFT")
        		Call ToClaim(RiskObject,ClaimObject,"MXBEXCESSONE")
        		Call ToClaim(RiskObject,ClaimObject,"MXBEXESSTWO")
        		Call ToClaim(RiskObject,ClaimObject,"MXBEXESSTHREE")
        		Call ToClaim(RiskObject,ClaimObject,"SANDBLAST")
        
                '---------------Additional Covers---------------'
                Call ToClaim(RiskObject,ClaimObject,"IS_WAIVER")
        		Call ToClaim(RiskObject,ClaimObject,"IS_PAYING")
        		Call ToClaim(RiskObject,ClaimObject,"IS_DEPOSIT")
                Call ToClaim(RiskObject,ClaimObject,"CARPERDAY")
        		Call ToClaim(RiskObject,ClaimObject,"DEPPAID")
        		Call ToClaim(RiskObject,ClaimObject,"IS_EXTENDCAR")
                Call ToClaim(RiskObject,ClaimObject,"IS_VEHREPL")
        
                '---------------Optional Covers---------------'
        		Call ToClaim(RiskObject,ClaimObject,"SXSERVICEEXT")
        		Call ToClaim(RiskObject,ClaimObject,"SXPREM")
                Call ToClaim(RiskObject,ClaimObject,"SXCARHIRE")
        		Call ToClaim(RiskObject,ClaimObject,"SXCARHIRENO")
        		Call ToClaim(RiskObject,ClaimObject,"SXCARHIREPREM")
        
                '---------------Premium Load/Discount---------------'
                'Call ToClaim(RiskObject,ClaimObject,"INDICATOR")
        		'Call ToClaim(RiskObject,ClaimObject,"INDICATOR_PERC")
        		'Call ToClaim(RiskObject,ClaimObject,"REASON")
        
                '---------------Interested Parties---------------'
                Call ToClaim(RiskObject,ClaimObject,"IPNAME")
        		Call ToClaim(RiskObject,ClaimObject,"IPDATE")
        
                '---------------Premium---------------'
        		'Call ToClaim(RiskObject,ClaimObject,"SECT_PREMIUM")
        
        		'---------------Extra Child Screen---------------'
        
        		Dim ClaimChild, Cnt, nIndex
        		RiskObject = "MOTOR_EXTRA"
        		ClaimChild = "MOTORCLM_EXTRA"
        		Cnt = Extras.RiskDataEngine.Count(RiskObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskObject,ClaimObject,ClaimChild,nIndex,"DESCRIPTION")
        			Call ToChildClaim(RiskObject,ClaimObject,ClaimChild,nIndex,"VALUE")
        		Next
        
        		'---------------Radio Child Screen---------------'
        
        		RiskObject = "MOTOR_RADIO"
        		ClaimChild = "MOTORCLM_RADIO"
        		Cnt = Extras.RiskDataEngine.Count(RiskObject)
        
        		For nIndex = 1 to Cnt
        			Engine.Item(ClaimObject).NewObject(ClaimChild)
        
        			Call ToChildClaim(RiskObject,ClaimObject,ClaimChild,nIndex,"DESCRIPTION")
        			Call ToChildClaim(RiskObject,ClaimObject,ClaimChild,nIndex,"VALUE")
        		Next
        
        		Call DoInstanceCount
         End If
        End Sub

        
        Function ToClaim(RObject, CObject, PropName)
        	Dim Val	
        	Val = Extras.RiskDataEngine.Item(RObject).Item(PropName).Value
        	Engine.Item(CObject).Item(PropName).Value = Val
        End Function
        
        Function ToChildClaim(RChild, CParent, Cobject, Index, PropName)
        	Dim Val
        	Val = Extras.RiskDataEngine.Item(RChild,Index).Item(PropName).Value
        	Engine.Item(CParent).Item(CObject, Index).Item(PropName).Value = Val
        End Function
        
        Sub DoInstanceCount
        ' The ScreenMain rule is added to every screen automatically.
        
        
        Call FindObjectInstanceCount("")
End Sub

Sub onValidate_MOTORCLAIM__THIRDPARTY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "THIRDPARTY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__SALVAGE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "SALVAGE", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__RECOVERY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "RECOVERY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__IS_SPM(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "IS_SPM", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__IS_THRDTLS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "IS_THRDTLS", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__IS_NAMAPP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "IS_NAMAPP", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__TMP_ISMX(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "TMP_ISMX", "0", "{listcode}")
        End If
End Sub

Sub onValidate_MOTORCLAIM__WINDSCREEN(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("MOTORCLAIM", "WINDSCREEN", "0", "{listcode}")
        End If
End Sub

Sub DoDefaults(bIsOnStart)
    Call WebRequired(bIsOnStart)
    Call onScreenLogic(bIsOnStart)
    Call onValidate_MOTORCLAIM__THIRDPARTY(bIsOnStart)
    Call onValidate_MOTORCLAIM__SALVAGE(bIsOnStart)
    Call onValidate_MOTORCLAIM__RECOVERY(bIsOnStart)
    Call onValidate_MOTORCLAIM__IS_SPM(bIsOnStart)
    Call onValidate_MOTORCLAIM__IS_THRDTLS(bIsOnStart)
    Call onValidate_MOTORCLAIM__IS_NAMAPP(bIsOnStart)
    Call onValidate_MOTORCLAIM__TMP_ISMX(bIsOnStart)
    Call onValidate_MOTORCLAIM__WINDSCREEN(bIsOnStart)
End Sub

Sub Start()
    Call DoDefaults(True)
End Sub

Sub Main()
    Call DoDefaults(False)
End Sub

