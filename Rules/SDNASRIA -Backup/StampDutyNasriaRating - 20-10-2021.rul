
Dim m_Prem, vCoreDetails, m_bFlag, m_FlagFullRefund, m_MonthDays, m_YearDays
Dim sTransType
'Get LatestCoverStartDate
Dim lCoverStartDate 
'Get Previous Sum Insured for (ProRata calculation on MTA)
Dim prevMDSumInsured
Dim prevMOTSumInsured
Dim prevPCSumInsured
Dim prevFCSumInsured 'Added by Badimu Kazadi -To cater for First Capital Homeloan
' Added to cater for ProRata on NASRIA and SD
	Dim lNumberOfDays
	Dim lPolicyPeriod
	Dim lFullPolicyPeriod 'Added for Retracted date fix
	Dim lOriginalPeriod 'Added for Retracted date fix
Sub Start()

	
    Dim dTotalPremium, dPercentRate, dStampDuty
	Dim iRet, iCount, lNumberOfMonthsinRF
	Dim vExtraParam, arrSPResult1, arrSPResult2, arrSPResult3
	Dim isMTA, isAdd, isDelete
	Dim retPrem, origPrem
	Dim BusinessType, BrokerShare
	Dim iRet2
	Dim mReturn
	Dim vResults
	Dim vExtraParameters
	Dim inceptionDateTpi
	Dim renewalDate
	Dim lCount
	Dim sRatingSectionCode
	Dim dPrevStampDuty
	Dim dStampDutyRate
	Dim dPremium
	Dim ProductCode
	Dim sIsDisableNewProRata
    Dim sIsDisableOriginalProRata
	Dim totalNamfisa
	Dim TotalStampDuty
	Dim TotalTransactionType				 
   
	'Get Transaction Type - Workaround
	'RENEWAL   	Policy under Renewal	
	'QUOTE     	Quotation	
	'MTAQUOTE  	MTA Quotation Permanent	
	'MTAQTETEMP	MTA Quotation Temporary
	'MTAQREINS 	MTA Quotation Reinstatement
	'MTAQCAN   	MTA Quotation Cancellation

   	'Call Extras.CallNamedStoredProcedure(clng(6722),cstr("Get_Transaction_Type"), vResults)
	'If IsArray(vResults) = true Then
		'sTransType = vResults(0,0)
	'End If
   
	'Get Inception This Period of Insurance (TPI) date for policy
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("InceptionDateTpi"), vResults)
	If IsArray(vResults) = true Then
		inceptionDateTpi = vResults(0,0)
	End If

	'Get Renewal Date
	mReturn = Extras.GetBODetails(vResults)
	renewalDate = vResults(16,0)
	
	'Calculate NASRIA Premiums
	ProductCode =SafecStr(Engine.Item("NASRIA").Item("PRODCODE").value)
	If ProductCode = "NPA" OR ProductCode = "NPM" OR ProductCode = "NSA" OR ProductCode = "NSM" OR ProductCode = "PGA" OR ProductCode = "PGM" then
		Call HandleNASRIA(inceptionDateTpi,renewalDate)
	End If
	'vExtraParameters = array("sTransactionType",TransactionType)
	vExtraParameters = array("sTransactionType",TransactionType,"dCoverStartDate",Extras.CoverStartDate,"dInceptionDateTpi", CDate(inceptionDateTpi))

	If extras.IsTrueMonthlyPolicy = False Then
		
		'Calculate Stamp Duty For Annual Policies
		iRet = Extras.CallNamedStoredProcedure(CLng(6722), CStr("GetStampDutyPremium"), arrSPResult2,vExtraParameters)

		If IsArray(arrSPResult2) Then
			
			dStampDuty = SafecDbl(arrSPResult2(0,0))
			dPremium = SafecDbl(arrSPResult2(1,0))
			dStampDutyRate = SafecDbl(Extras.GetField("UDL_STAMP_DUTY", "rate_percent", "SD", Extras.CoverStartDate))			
			' If dStampDutyRate <> 0 Then
				' dPremium = dStampDuty / dStampDutyRate * 100
			' End If
			TotalTransactionType = "ANNUAL"													   
			
			Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = 0.00
			Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = dPremium
			Engine.Item("STAMPDUTY").Item("SD_RATE").value = dStampDutyRate
			
			'call GenerateStampDutyOutput (0.00, 0.0, dStampDuty, "STAMPDUTY")
			Call GenerateOutput(0.00, 0.00, dStampDuty, "STAMPDUTY" , 1, 1)
		End If			
		
		' iRet2 = Extras.CallNamedStoredProcedure(CLng(6722), CStr("GetNamfisa"), arrSPResult2, vExtraParameters)
		' If IsArray(arrSPResult2) Then
			' BusinessType = SafecInt(arrSPResult2(0,0))
			' If BusinessType = 7 Then
				' BrokerShare = SafecDbl(arrSPResult2(1,0))
				' Call GenerateOutput (0.00, 0.0, BrokerShare, "NAMFISA", 1)
			' End If
		' End If
	Else
		' iRet2 = Extras.CallNamedStoredProcedure(CLng(6722), CStr("GetNamfisa"), arrSPResult2, vExtraParameters)
		' If IsArray(arrSPResult2) Then
			' BusinessType = SafecInt(arrSPResult2(0,0))
			' If BusinessType = 7 Then
				' BrokerShare = SafecDbl(arrSPResult2(1,0))
				' Call GenerateOutput (0.00, 0.0, BrokerShare, "NAMFISA", 1)
			' End If
		' End If
		
		'Added just to get the MTA Period
		'Get Policy Period Details
		Dim vExtraFullPeriod
		Dim vPeriodResults			
		vExtraFullPeriod = array("bIsMonthly",Extras.IsTrueMonthlyPolicy)
		Call Extras.CallNamedStoredProcedure(clng(6722),cstr("SASRIA_GetPeriod"), vPeriodResults, vExtraFullPeriod)
		If IsArray(vPeriodResults) = True Then
			lNumberOfDays = SafecInt(vPeriodResults(0,0))
			lFullPolicyPeriod = SafecInt(vPeriodResults(2,0)) 
		End If
		
		'Calculate Stamp Duty For Monthly Policies
		If IsNull(TransactionType) Or TransactionType = "" OR TransactionType = "NB" Or TransactionType = "REN" Then
			vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi), "sTransactionType", TransactionType, "dCoverStartDate", Extras.CoverStartDate)
			Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateMonthlyStampDuty"), vResults, vExtraParameters)
			sIsDisableNewProRata = 1
			sIsDisableOriginalProRata= 1
			If IsArray(vResults) = True Then
			
				dTotalPremium = SafecDbl(vResults(0,0))
				dPercentRate = SafecDbl(vResults(1,0))
				dStampDuty = SafecDbl(vResults(2,0))
				Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = SafecDbl(0.00)
				Engine.Item("STAMPDUTY").Item("SD_RATE").value = SafecDbl(vResults(1,0))
				Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(vResults(2,0))
		
			End If	
			TotalTransactionType = "NB" '01/07/2021 - Added for annual/monthly SD 															 
		End If 
		
		'Stamp was not refunded during MTR so it must be be charged again on re-instatement
		' If (TransactionType = "MTR") And (inceptionDateTpi <> Extras.CoverStartDate) Then
			' Call Extras.CallNamedStoredProcedure(6722, "Get_Previous_Annual_Premium", vResults)
			' If IsArray(vResults) Then
				' For lCount = 0 To UBound(vResults, 2)
					' sRatingSectionCode = vResults(0, lCount)
					' If sRatingSectionCode = "STAMPDUTY" Then
						' dStampDuty = SafecDbl(vResults(1, lCount))
						' Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = 0
						' Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = 0
						' Exit For
					' End If
				 ' Next
			' End If
		' End If
		
		'Added to handle MTC and  MTR by  Badimu Kazadi  -17 Dec 2020
		'stop
		' If (TransactionType = "MTC") Then
			' Dim mtcDate, vMTCResults, dCurrentStampDuty
			' sIsDisableNewProRata = 1
			' sIsDisableOriginalProRata= 1
			' mtcDate = Extras.CoverStartDate
			' vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi), "sTransactionType", transactionType, "dMTADate", CDate(mtcDate), "lNumOfDays", lNumberOfDays, "lFullPolicyPeriod", lFullPolicyPeriod)
			' Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateStampDutyCancellation"), vMTCResults, vExtraParameters)
				
			' If IsArray(vMTCResults) Then
				' For lCount = 0 To UBound(vMTCResults, 2)
						' dStampDuty = SafecDbl(vMTCResults(0, lCount))
						' dCurrentStampDuty = SafecDbl(vMTCResults(1, lCount))
						' Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(dCurrentStampDuty)
						' Exit For
				' Next
			' End If
			' TotalTransactionType = "MTC" ' 01/07/2021 - Added for annual/monthly SD 															   
		' End If
		
		If (TransactionType = "MTC") Then
			Dim mtcDate, vMTCResults, dCurrentStampDuty
			Dim lSync, vSyncResults
			sIsDisableNewProRata = 1
			sIsDisableOriginalProRata= 1
			mtcDate = Extras.CoverStartDate
			
			vExtraParameters = array("dMTADate", CDate(mtcDate))
		
			Call Extras.CallNamedStoredProcedure(clng(6722),cstr("MTAInSyncCheck"), vSyncResults, vExtraParameters)
		
			If IsArray(vSyncResults) = True Then
				lSync = CInt(vSyncResults(0,0))
				
			End If 
					
			vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi), "sTransactionType", transactionType, "dMTADate", CDate(mtcDate), "lNumOfDays", lNumberOfDays, "lFullPolicyPeriod", lFullPolicyPeriod,"lSync",lSync)
			Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateStampDutyCancellation"), vMTCResults, vExtraParameters)
				
			If IsArray(vMTCResults) Then
				For lCount = 0 To UBound(vMTCResults, 2)
						dStampDuty = SafecDbl(vMTCResults(0, lCount))
						dCurrentStampDuty = SafecDbl(vMTCResults(1, lCount))
						Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(dCurrentStampDuty)
						Exit For
				Next
			End If
			TotalTransactionType = "MTC" ' 01/07/2021 - Added for annual/monthly SD 															   
		End If
		
		
		If (TransactionType = "MTR") Then
			'Added to fix the reinstatement issue - 13/05/2021
			Dim PreviousReinstateStampDuty
			'Get the permium this premium that was posted
			Call Extras.CallNamedStoredProcedure(6722, "GetPreviousVersionRatingSection", vResults)
			If IsArray(vResults) Then
				For lCount = 0 To UBound(vResults, 2)
					sRatingSectionCode = vResults(0, lCount)
					Select Case sRatingSectionCode
						
						'StampDuty
						Case "STAMPDUTY"
							PreviousReinstateStampDuty = SafecDbl(vResults(1, lCount)) * -1
							
					 End Select
				 Next
			End If
			PreviousReinstateStampDuty = Round(PreviousReinstateStampDuty,2)
			'End of added code
			
			Dim mtrDate, vMTRResults, dStampDutyRefund
			sIsDisableNewProRata = 1
			sIsDisableOriginalProRata= 1
			mtrDate = Extras.CoverStartDate
			vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi), "sTransactionType", transactionType, "dMTADate", CDate(mtrDate))
			Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateStampDutyReinstatement"), vMTRResults, vExtraParameters)
			If IsArray(vMTRResults) Then
				For lCount = 0 To UBound(vMTRResults, 2)
						dStampDuty = SafecDbl(vMTRResults(0, lCount))
						dStampDutyRefund = SafecDbl(vMTRResults(1, lCount))
						Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(dStampDutyRefund)
						Exit For
				Next
			End If
			'Added to correct Reinstatement issue - 13/05/2021
			dStampDuty = PreviousReinstateStampDuty + dStampDutyRefund
			'End of added code

			'TotalStampDuty = dStampDuty + (PreviousReinstateStampDuty * -1) ' 01/07/2021 - Added for annual/monthly SD
			TotalTransactionType = "MTR" ' 01/07/2021 - Added for annual/monthly SD														  
		End If
		
		
		' If (TransactionType = "MTA") And dStampDuty = 0 Then
			
			' Call Extras.CallNamedStoredProcedure(6722, "Get_Previous_Annual_Premium", vResults)
			' If IsArray(vResults) Then
				' For lCount = 0 To UBound(vResults, 2)
					 ' sRatingSectionCode = vResults(0, lCount)
					 ' If sRatingSectionCode = "STAMPDUTY" Then
						' dStampDuty = SafecDbl(vResults(1, lCount))
						' Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = 0
						' Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = 0
						' Exit For
					' End If
				 ' Next
			' End If
		' End If
		
		
		If (TransactionType = "MTA")  Then
			sIsDisableNewProRata = 1
			sIsDisableOriginalProRata= 1
			dStampDuty = 0
			
			Dim isInSync, mtaDate, vMTAResults
			mtaDate = Extras.CoverStartDate
			Dim QuarterStampDuty,MaxStamp, CurrentStampDuty
			
			vExtraParameters = array("dMTADate", CDate(mtaDate))
		
			Call Extras.CallNamedStoredProcedure(clng(6722),cstr("MTAInSyncCheck"), vResults, vExtraParameters)
		
			If IsArray(vResults) = True Then
				isInSync = CInt(vResults(0,0))
			
			vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi), "sTransactionType", TransactionType, "dMTADate", CDate(mtaDate))
				
			If isInSync = 1 Then
				Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateStampDutyInSyncMTA"), vMTAResults, vExtraParameters)
				If IsArray(vMTAResults) Then
					For lCount = 0 To UBound(vMTAResults, 2)
							dStampDuty = SafecDbl(vMTAResults(0, lCount))
							QuarterStampDuty = SafecDbl(vMTAResults(1, lCount))
							CurrentStampDuty = SafecDbl(vMTAResults(2, lCount))
							MaxStamp = SafecDbl(vMTAResults(3, lCount))
							Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = 0
							
							'If QuarterStampDuty >= MaxStamp Then
								'Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(0.00)
							'Else
								Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(CurrentStampDuty)
							'End If
							
							Exit For
					Next
				End If
			Else
				Call Extras.CallNamedStoredProcedure(clng(6722),cstr("CalculateStampDutyOOSMTA"), vMTAResults, vExtraParameters)
				If IsArray(vMTAResults) Then
					For lCount = 0 To UBound(vMTAResults, 2)
							dStampDuty = SafecDbl(vMTAResults(0, lCount))
							QuarterStampDuty = SafecDbl(vMTAResults(1, lCount))
							CurrentStampDuty = SafecDbl(vMTAResults(2, lCount))
							MaxStamp = SafecDbl(vMTAResults(3, lCount))
							Engine.Item("STAMPDUTY").Item("STAMP_DUTY_SI").value = 0
							'If QuarterStampDuty >= MaxStamp Then
								'Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(0.00)
							'Else
								Engine.Item("STAMPDUTY").Item("SD_AMOUNT").value = SafecDbl(CurrentStampDuty)
							'End If
							
							Exit For
					Next
				End If
			End If
		End If	
			
		TotalTransactionType = "MTA" ' 01/07/2021 - Added for annual/monthly SD																  
				
		End If	
		
		
		'Changed made on 1/03/2021 by Badimu to cater for Cancellation and Reinstatement
		'If extras.IsTrueMonthlyPolicy = True And ((TransactionType = "MTR") OR (TransactionType = "MTC")) Then 
			Call GenerateOutput(0.00, 0.00, dStampDuty, "STAMPDUTY" , sIsDisableNewProRata,sIsDisableOriginalProRata)
		'Else
		'	Call GenerateOutput(0.00, 0.00, dStampDuty, "STAMPDUTY" , 1)
		'End If
	End If
	'01/07/2021 - Added Annual/Monthly Stampduty to be used on documents
	vExtraParameters = array("dInceptionDateTpi", CDate(inceptionDateTpi),"sTransactionType",TotalTransactionType)
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("DocumentTotalStampDutyPremium"), vResults, vExtraParameters)
	If IsArray(vResults) = true Then
		TotalStampDuty = vResults(0,0)
	End If
	
	Engine.Item("STAMPDUTY").Item("SD_ANNUAL_PREMIUM").value = SafecDbl(TotalStampDuty)
	'End Added code																	 
	
	'Get Assign excesses to hidden field
	If ProductCode = "NPA" OR ProductCode = "NPM" OR ProductCode = "NSA" OR ProductCode = "NSM" OR ProductCode = "PGA" OR ProductCode = "PGM" then
		GetExcesses()
	End If
	
	'01 July 2021 - Retrieve total Namfisa (CR)
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("totalNamfisa"), vResults)
	If IsArray(vResults) = true Then
		totalNamfisa = vResults(0,0)
	End If
	Engine.Item("STAMPDUTY").Item("NAMFISA_LEVY").value = SafecDbl(totalNamfisa)
	 
End Sub

Sub GetExcesses()
	With Engine.Item("NASRIA")
	
		'MD
		.Item("MD_EXCESS_PERCENT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_percent", "MDANN", Extras.CoverStartDate))
		.Item("MD_EXCESS_AMOUNT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_amount", "MDANN", Extras.CoverStartDate))
		
		'MOT
		.Item("MOTOR_EXCESS_PERCENT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_percent", "MOTANN", Extras.CoverStartDate))
		.Item("MOTOR_EXCESS_AMOUNT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_amount", "MOTANN", Extras.CoverStartDate))
		.Item("MOTOR_WS_EXCESS_AMOUNT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_windscreen", "MOTANN", Extras.CoverStartDate))		
		
		'PC
		.Item("PC_EXCESS_PERCENT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_percent", "PCANN", Extras.CoverStartDate))
		.Item("PC_EXCESS_AMOUNT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_amount", "PCANN", Extras.CoverStartDate))
		
		'FC For First Capital Homeloan
		.Item("FC_EXCESS_PERCENT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_percent", "PGANN", Extras.CoverStartDate))
		.Item("FC_EXCESS_AMOUNT").Value = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "excess_amount", "PGANN", Extras.CoverStartDate))

	End With
End Sub

Sub HandleNASRIA(inceptionDateTpi,renewalDate)	
	Dim vExtraParameters
	Dim vResults
	'Dim lNumberOfDays
	'Dim lPolicyPeriod
	'Dim lFullPolicyPeriod 'Added for Retracted date fix
	'Dim lOriginalPeriod 'Added for Retracted date fix
	Dim bIsPeriodChanged 'Added for Retracted date fix
	Dim bIsPeriodReduced 'Added for Retracted date fix
	Dim lCount
	Dim lRiskID
	Dim lNewRiskID
	Dim lOrigRiskID
	Dim sRiskCode
	Dim sRiskDescription
	Dim dSumInsured
	Dim StatusFlag
	Dim bIsNewRisk
	Dim FileType


	'Minimum Premiums
	Dim dMDMinPrem
	Dim dMOTMinPrem
	Dim dPCMinPrem
	Dim dFCMinPrem

	'Rates
	Dim dMDRate
	Dim dMOTRate
	Dim dPCRate
	Dim dFCRate
	
	'RiskCodes
	Dim bIsMD:bIsMD = 0
	Dim bIsMOT:bIsMOT = 0
	Dim bIsPC:bIsPC = 0
	Dim bIsFC:bIsFC = 0

	If Extras.IsTrueMonthlyPolicy = True Then 
		'True Monthly Minimum Premiums
		dMDMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "MDMTH", Extras.CoverStartDate) / 1.15)
		dMOTMinPrem	 = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "MOTMTH", Extras.CoverStartDate)/ 1.15)
		dPCMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "PCMTH", Extras.CoverStartDate)/ 1.15)
		dFCMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "PGMTH", Extras.CoverStartDate)/ 1.15)
		
		'True Monthly Minimum Rates
		dMDRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "MDMTH", Extras.CoverStartDate))
		dMOTRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "MOTMTH", Extras.CoverStartDate))
		dPCRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "PCMTH", Extras.CoverStartDate))
		dFCRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "PGMTH", Extras.CoverStartDate))			
		
	Else
		'Annual Minimum Premiums	
		dMDMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "MDANN", Extras.CoverStartDate)/ 1.15)
		dMOTMinPrem = 	SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "MOTANN", Extras.CoverStartDate)/ 1.15)
		dPCMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "PCANN", Extras.CoverStartDate)/ 1.15)
		dFCMinPrem = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "minimum_premium", "PGANN", Extras.CoverStartDate)/ 1.15)
		
		'Annual Minimum Rates	
		dMDRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "MDANN", Extras.CoverStartDate))
		dMOTRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "MOTANN", Extras.CoverStartDate))
		dPCRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "PCANN", Extras.CoverStartDate))
		dFCRate = SafecDbl(Extras.GetField("UDL_NASRIA_RATES", "rate", "PGANN", Extras.CoverStartDate))
	End If
	'Round the minimum premiums after they have been stripped of VAT
	dMDMinPrem = Round(dMDMinPrem,2)
	dMOTMinPrem = Round(dMOTMinPrem,2)
	dPCMinPrem = Round(dPCMinPrem,2)
	dFCMinPrem  = Round(dFCMinPrem,2)
	
	'Get Policy Period Details
	vExtraParameters = array("bIsMonthly",Extras.IsTrueMonthlyPolicy)
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("SASRIA_GetPeriod"), vResults, vExtraParameters)
	If IsArray(vResults) = True Then
		lNumberOfDays = SafecInt(vResults(0,0))
		lPolicyPeriod = SafecInt(vResults(1,0))
		lFullPolicyPeriod = SafecInt(vResults(2,0)) 'Added for Retracted date fix
		lOriginalPeriod = SafecInt(vResults(3,0)) 'Added for Retracted date fix
	End If
	
	bIsPeriodChanged = 0
	bIsPeriodReduced = 0
	'Check if the period has changed
	If (Extras.TransactionType = "MTA") And (lOriginalPeriod <> lPolicyPeriod) Then
		bIsPeriodChanged = 1
		If (lOriginalPeriod > lPolicyPeriod) Then
			bIsPeriodReduced = 1
		End If
	End If
	
	Dim vRisksArray
	Dim bCalculateTotalPremium:bCalculateTotalPremium = False													  
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("NASRIA_GetRiskSIforPersonalLines"), vRisksArray)
	Call DeleleRiskDetails("NASRIA_MOT")
	Call DeleleRiskDetails("NASRIA_MD")
	Call DeleleRiskDetails("NASRIA_PC")
	Call DeleleRiskDetails("NASRIA_FC") 'Added by Badimu Kazadi - For First Capital Homeloan
	If IsArray(vRisksArray) = True Then
		For lCount = 0 to UBound(vRisksArray,2)
	   
			 lRiskID = vRisksArray(0,lCount)
			 sRiskCode = vRisksArray(1,lCount)
			 sRiskDescription  = vRisksArray(2,lCount)
			 dSumInsured = (vRisksArray(3,lCount)/1.15)
			 lOrigRiskID = vRisksArray(4,lCount) 'Added by Muhammad Adam - To uniquely identify each risk
			 StatusFlag = vRisksArray(5,lCount) 'Added by Muhammad Adam - To identify newly added risks
			 FileType = vRisksArray(6,lCount)
			 If ((StatusFlag = "C") And (lOrigRiskID = 0) And (Extras.CoverStartDate <> inceptionDateTpi)) OR ((StatusFlag = "C") And (lOrigRiskID = 0) and (FileType = "3")) OR ((StatusFlag = "C") And (lOrigRiskID = 0) And (Extras.CoverStartDate = inceptionDateTpi) AND (FileType = "4")) Then
				bIsNewRisk = 1
			 Else
				bIsNewRisk = 0
			 End If
			 If Extras.TransactionType <> "MTR" and lOrigRiskID <> 0 Then
				lRiskID = lOrigRiskID
			 End If
			If sRiskCode = "NPADOM" Then
				Call CalculatePremiums(inceptionDateTpi,renewalDate,dMDMinPrem,dMDRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True				 
			ElseIf sRiskCode = "NPAMOTOR" Then
				Call CalculatePremiums(inceptionDateTpi,renewalDate,dMOTMinPrem,dMOTRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True				 
			ElseIf sRiskCode = "NPAPC" Then
				Call CalculatePremiums(inceptionDateTpi,renewalDate,dPCMinPrem,dPCRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True
			ElseIf sRiskCode = "PGSFC" Then ' Added by Badimu Kazadi - To cater for First Capital Homeloan
				Call CalculatePremiums(inceptionDateTpi,renewalDate,dFCMinPrem,dFCRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True
			End If
			
			'Moved here from outside IF Statement. - Muhammad Adam - 03/12/2020
			'Process each risk type
			'If (Extras.TransactionType = "MTR") OR (Extras.TransactionType = "MTC" ) OR (Extras.TransactionType ="MTA" And CDate(Extras.CoverStartDate) <> CDate(inceptionDateTpi)) Then 
			If (Extras.TransactionType = "MTR") OR (Extras.TransactionType = "MTC" ) OR (Extras.TransactionType ="MTA") Then 
				If sRiskCode = "NPADOM" Then					  
					Call HandleMidTermTransactions(inceptionDateTpi,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,dMDMinPrem,"NPADOM",dMDRate, lRiskID, bIsNewRisk)
					bCalculateTotalPremium = True
				ElseIf sRiskCode = "NPAMOTOR" Then													
					Call HandleMidTermTransactions(inceptionDateTpi,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,dMOTMinPrem,"NPAMOTOR",dMOTRate, lRiskID, bIsNewRisk)
					bCalculateTotalPremium = True
				ElseIf sRiskCode = "NPAPC" Then												 
					Call HandleMidTermTransactions(inceptionDateTpi,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,dPCMinPrem,"NPAPC",dPCRate, lRiskID, bIsNewRisk)
					bCalculateTotalPremium = True
				ElseIf sRiskCode = "PGSFC" Then	' Added by Badimu Kazadi - To cater for First Capital Homeloan										 
					Call HandleMidTermTransactions(inceptionDateTpi,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,dFCMinPrem,"PGSFC",dFCRate, lRiskID, bIsNewRisk)
					bCalculateTotalPremium = True
				End If						
			End If
			'End of moved code
		Next
	End If 
	
	'Added 19/02/2021 - To handle deleted risks
	Dim vDeletedRisksArray
	Dim dTotalDeletedMD, dTotalDeletedMot, dTotalDeletedPC, dTotalDeletedFC
	
	dTotalDeletedMD = 0
	dTotalDeletedMot = 0
	dTotalDeletedPC = 0
	dTotalDeletedFC = 0
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("NASRIA_GetRiskSIforDeletedPersonalLines"), vDeletedRisksArray)
	If IsArray(vDeletedRisksArray) = True Then
		For lCount = 0 to UBound(vDeletedRisksArray,2)
			lRiskID = vDeletedRisksArray(0,lCount)
			sRiskCode = vDeletedRisksArray(1,lCount)
			sRiskDescription  = vDeletedRisksArray(2,lCount)
			dSumInsured = (vDeletedRisksArray(3,lCount)/1.15)
			If sRiskCode = "NPADOM" Then
				dTotalDeletedMD = dTotalDeletedMD + CalculateDeletedPremium(inceptionDateTpi,renewalDate,dMDMinPrem,dMDRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True
			ElseIf sRiskCode = "NPAMOTOR" Then
				dTotalDeletedMot = dTotalDeletedMot + CalculateDeletedPremium(inceptionDateTpi,renewalDate,dMOTMinPrem,dMOTRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True				
			ElseIf sRiskCode = "NPAPC" Then
				dTotalDeletedPC = dTotalDeletedPC + CalculateDeletedPremium(inceptionDateTpi,renewalDate,dPCMinPrem,dPCRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True
			ElseIf sRiskCode = "PGSFC" Then 'Added by Badimu Kazadi -To cater for First Capital Homeloan
				dTotalDeletedFC = dTotalDeletedFC + CalculateDeletedPremium(inceptionDateTpi,renewalDate,dFCMinPrem,dFCRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
				bCalculateTotalPremium = True
			End If
		Next
	End If

	'Calculate Total Premiums based on selected RiskCode
	If bCalculateTotalPremium = True Then
		Call CalculateTotalPremium(inceptionDateTpi,renewalDate,lNumberOfDays,lPolicyPeriod,dMDMinPrem,dMOTMinPrem,dPCMinPrem,prevMDSumInsured,prevMOTSumInsured,prevPCSumInsured,prevFCSumInsured,lCoverStartDate,dTotalDeletedMD,dTotalDeletedMot,dTotalDeletedPC,dTotalDeletedFC,bIsPeriodChanged,bIsPeriodReduced)
	End If												 
End Sub

Private Sub CalculatePremiums(inceptionDateTpi,renewalDate, dMinPrem,dRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
	Dim dFullPeriodPremium
	Dim dPremium
	Dim dCalcPremium
	Dim dMinimumPremiumUplift: dMinimumPremiumUplift = 0
	'Calculate Full Period Premiums
	dSumInsured = dSumInsured
	dFullPeriodPremium = dSumInsured * dRate * 0.01
	dCalcPremium = dFullPeriodPremium/lFullPolicyPeriod*lPolicyPeriod
	
	'Calculate this transaction Premium - for display
	dPremium = dCalcPremium * (lNumberOfDays  / lPolicyPeriod) 'Changed from dFullPeriodPremium to dCalcPremium

	'Apply minimum premium
	If dSumInsured > 0 Then
		If dPremium > 0 And dPremium < dMinPrem Then
			dMinimumPremiumUplift = dMinPrem - dPremium
			dPremium = dMinPrem
			If dFullPeriodPremium < dMinPrem Then
				dFullPeriodPremium = dMinPrem
			End If
		End If				
	End If
	Call AddRiskDetails(lRiskID,sRiskCode,sRiskDescription,dSumInsured,dRate,dPremium,dFullPeriodPremium,dCalcPremium,dMinimumPremiumUplift)	
End Sub

'*****************************************************************************************************
' Processes MTA, MTC and MTR at child level for each risk
'*****************************************************************************************************
Private Sub HandleMidTermTransactions(inceptionDateTpi,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,dMinPrem,sRiskCode, dRate, lRiskID, bIsNewRisk)
	Dim sColumns
	Dim sField	   
	Dim dTotalPeriodPremium
	Dim vRisksArray
	DIm vExtraParameters
	Dim sDataModelCode
	Dim sGisObject
	DIm sProperty
	Dim lCount
	Dim sRiskDescription
	Dim dPrevThisPremium
	Dim dPrevAnnualPremium
	Dim dAnnualPremiumCalculated	
	Dim dPrevAnnualPremiumCalculated
	Dim dPrevMinUpliftPremium
	Dim dCancelPrevMinUpliftPremium
	Dim dSi
	Dim dAnnualPremium
	Dim dPremiumMTA
	Dim dPremium
	Dim dEarnerdPremium
	Dim LatestCoverStartDate
	Dim PreviousSumInsured
	Dim vPrevSumInsured	
	Dim bIsSIChanged
	Dim dCurrentPrem
	'Get last calculated Premiums
	 sDataModelCode = "SDNASRIA"
	 If sRiskCode = "NPADOM" Then
		sGisObject = "NASRIA_MD"
		sProperty = "MD_"
		'sColumns = " RISKDESCRIPTION" '0
		sColumns = " RISKID" '0
		sColumns = sColumns & ", RISKCODE" '1
		sColumns = sColumns & ", MD_NASRIA_PREMIUM"	'2	 
		sColumns = sColumns & ", MD_NASRIA_ANNUAL_PREM" '3
		sColumns = sColumns & ", MD_NASRIA_ANNUAL_PREM_CALC" '4	 
		sColumns = sColumns & ", MD_MIN_PREM_UPLIFT" '5
		sColumns = sColumns & ", MD_MIN_PREM_UPLIFT_PREV" '6
		sField = "MD_NASRIA_PREMIUM"
		
	ElseIf sRiskCode = "NPAMOTOR" Then
		sGisObject = "NASRIA_MOT"
		sProperty = "MOTOR_"
		'sColumns = " RISKDESCRIPTION" '0
		sColumns = " RISKID" '0
		sColumns = sColumns & ", RISKCODE" '1
		sColumns = sColumns & ", MOTOR_NASRIA_PREMIUM"	'2	 
		sColumns = sColumns & ", MOTOR_NASRIA_ANNUAL_PREM" '3
		sColumns = sColumns & ", MOTOR_NASRIA_ANNUAL_PREM_CALC" '4	 
		sColumns = sColumns & ", MOTOR_MIN_PREM_UPLIFT" '5
		sColumns = sColumns & ", MOTOR_MIN_PREM_UPLIFT_PREV" '6
		sField = "MOTOR_NASRIA_PREMIUM"

	ElseIf sRiskCode = "NPAPC" Then
		sGisObject = "NASRIA_PC"
		sProperty = "PC_"		
		'sColumns = " RISKDESCRIPTION" '0
		sColumns = " RISKID" '0
		sColumns = sColumns & ", RISKCODE" '1
		sColumns = sColumns & ", PC_NASRIA_PREMIUM"	'2	 
		sColumns = sColumns & ", PC_NASRIA_ANNUAL_PREM" '3
		sColumns = sColumns & ", PC_NASRIA_ANNUAL_PREM_CALC" '4	 
		sColumns = sColumns & ", PC_MIN_PREM_UPLIFT" '5
		sColumns = sColumns & ", PC_MIN_PREM_UPLIFT_PREV" '6
		sField = "PC_NASRIA_PREMIUM"
		
	ElseIf sRiskCode = "PGSFC" Then 'Added by Badimu Kazadi - To cater for First Capital Homeloan
		sGisObject = "NASRIA_FC"
		sProperty = "FC_"		
		'sColumns = " RISKDESCRIPTION" '0
		sColumns = " RISKID" '0
		sColumns = sColumns & ", RISKCODE" '1
		sColumns = sColumns & ", FC_NASRIA_PREMIUM"	'2	 
		sColumns = sColumns & ", FC_NASRIA_ANNUAL_PREM" '3
		sColumns = sColumns & ", FC_NASRIA_ANNUAL_PREM_CALC" '4	 
		sColumns = sColumns & ", FC_MIN_PREM_UPLIFT" '5
		sColumns = sColumns & ", FC_MIN_PREM_UPLIFT_PREV" '
		sField = "FC_NASRIA_PREMIUM"
		
	End If
	vExtraParameters = Array("sDataModelCode", sDataModelCode, "sGisObject", sGisObject,"sField", sField, "lRiskID", lRiskID)
	Call Extras.CallNamedStoredProcedure(clng(6722), cstr("NASRIA_GetPreviousRiskPremium"), vRisksArray, vExtraParameters)
	If IsArray(vRisksArray) = True Then
		For lCount = 0 to UBound(vRisksArray,2)
			dTotalPeriodPremium = vRisksArray(0,lCount)
		Next
	End If
	 vExtraParameters = Array("sDataModelCode", sDataModelCode, "sGisObject", sGisObject, "sColumns", sColumns, "sRiskCode", sRiskCode, "lRiskID", lRiskID, "sTransaction", Extras.TransactionType)
	 Call Extras.CallNamedStoredProcedure(clng(6722), cstr("GetPreviousVersionDataModelValues"), vRisksArray, vExtraParameters)
	 If IsArray(vRisksArray) = True Then
		For lCount = 0 to UBound(vRisksArray,2)
			 sRiskDescription = vRisksArray(0,lCount)
			 sRiskCode = vRisksArray(1,lCount)
			 dPrevThisPremium  = vRisksArray(2,lCount)
			 dPrevAnnualPremium = vRisksArray(3,lCount)
			 dPrevAnnualPremiumCalculated = vRisksArray(4,lCount)
			 dPrevMinUpliftPremium = vRisksArray(5,lCount)
			 dCancelPrevMinUpliftPremium = vRisksArray(6,lCount)
			 
			 If dCancelPrevMinUpliftPremium <> 0 AND Extras.TransactionType = "MTC" Then
				dPrevMinUpliftPremium = dCancelPrevMinUpliftPremium
			 End IF
			 
			 'Check which RiskID should be used
			 If Extras.TransactionType = "MTR"  OR Extras.TransactionType = "MTC" OR (Extras.TransactionType = "MTA" And (CDate(Extras.CoverStartDate) <> CDate(inceptionDateTpi))) Then
				sRiskDescription = lRiskID
			 End If
			 
			'Check if it is a MTC and that there is a period changed
			 'If (lPolicyPeriod <> lFullPolicyPeriod) and (Extras.TransactionType = "MTC") Then
			 If (lPolicyPeriod <> lOriginalPeriod) and (Extras.TransactionType = "MTC") Then
				dPrevAnnualPremiumCalculated = dTotalPeriodPremium
			 End If
			 If bIsNewRisk = 1 Then
				dPrevThisPremium = 0
				dPrevAnnualPremium = 0
				dPrevAnnualPremiumCalculated = 0
				dPrevMinUpliftPremium = 0
			 End If
			
			Call UpdateRiskDetails(sRiskDescription,sRiskCode,dPrevThisPremium,dPrevAnnualPremium,dPrevAnnualPremiumCalculated,dPrevMinUpliftPremium,lRiskID)
		Next	
	End If

	'Assign the latest Cover Start Date back
	lCoverStartDate = LatestCoverStartDate									 
	Dim lTotalCount
	lTotalCount = Engine.Item("NASRIA").Count(sGisObject)
	'Loop through child object to calculate premiums
	For lCount = 1 To Engine.Item("NASRIA").Count(sGisObject)
		dSi = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "ACCUMULATED_SI").value)
		dPrevThisPremium = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM_PREV").value)
		dAnnualPremium = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM").value)
		dPrevAnnualPremium =  SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_PREV").value)
		dAnnualPremiumCalculated = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_CALC").value)		
		dPrevAnnualPremiumCalculated = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_CALC_PREV").value)	
		dPrevMinUpliftPremium = SafecDbl(Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "MIN_PREM_UPLIFT_PREV").value)
	
		'****************************************************************
		' MTA (Not from inception)
		'****************************************************************
		'If (Extras.TransactionType = "MTA") And (CDate(Extras.CoverStartDate) <> CDate(inceptionDateTpi)) Then
		If (Extras.TransactionType = "MTA") Then
			vPrevSumInsured = vPrevSumInsured + SafecDbl(PreviousSumInsured)
			'Check if the MTA period is changed - Added 30-03-2021 for retracted date
			If lPolicyPeriod <> lOriginalPeriod And dPrevAnnualPremium = 0 Then
				dAnnualPremium = dAnnualPremiumCalculated
			End If
			
			dPremiumMTA = (dAnnualPremium  - dPrevAnnualPremium) * (lNumberOfDays / lFullPolicyPeriod) 'Changed from dAnnualPremium to dAnnualPremiumCalculated
			'dPremium = dPrevAnnualPremium + dPremiumMTA
			If (dSi > 0) Then
				'We need to check if uplifiting of minimum premiums took place
				'We also need to ensure this is only for newly added risk
				If (dPrevAnnualPremiumCalculated >= dMinPrem) Then 
					'Normal MTA
					If ((dPrevThisPremium = 0) And (CDate(Extras.CoverStartDate) <> CDate(inceptionDateTpi)) AND (dPrevAnnualPremium = 0)) Then
						dPrevThisPremium = dPrevAnnualPremium
					End If
					If ((dPrevAnnualPremium + dPremiumMTA) < dMinPrem) and (dPremiumMTA < 0) Then
						dPremiumMTA = 0
					End if
					'Added - 19/07/2021 - To cater for a refund that takes total below minimum
					If (dPrevAnnualPremiumCalculated + Round(dPremiumMTA,2)) < dMinPrem Then
						dPremiumMTA = dPremiumMTA + (dMinPrem - (dPrevAnnualPremiumCalculated + dPremiumMTA))
					End If
					'End Added
					Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = Round(dPremiumMTA,2)
				ElseIf dPrevAnnualPremiumCalculated = 0  Then 'Need to take of situations where a new item is being added 
					If dPremiumMTA < dMinPrem Then
						dPremiumMTA = dMinPrem
					End If
					Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = Round(dPremiumMTA,2)
				Else			
					'If calculated premium > minimum premium the difference between previously calculated premium 
					'and minimum premium must be clawed back before additional premium is raised 
					'Commented out below to use annual premium calculated as the document annual'''''''''''''''''
					'If dAnnualPremiumCalculated > 0 And dAnnualPremiumCalculated < dMinPrem Then
					If dAnnualPremium > 0 And dAnnualPremium < dMinPrem Then
						'We already charged minimum premium and we are yet to hit minimum premium
						Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = 0							
					Else
						'We need to refund minimum retained
						Dim dMinPremRefund
						If dPremiumMTA <= dPrevMinUpliftPremium Then
							dPremiumMTA = 0 'Don't charge extra
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "MIN_PREM_UPLIFT").value = Round(dPrevMinUpliftPremium - dPremiumMTA,2)
						Else
							dPremiumMTA = dPremiumMTA - dPrevMinUpliftPremium 'Claw back premium
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "MIN_PREM_UPLIFT").value = 0
						End If 
						Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = Round(dPremiumMTA,2)
					End If				
				End If
			End If
		ElseIf (Extras.TransactionType = "MTC") Then
			Dim PremiumPosted
			PremiumPosted = 0
			'If (lPolicyPeriod <> lFullPolicyPeriod) Then
			If (lPolicyPeriod <> lOriginalPeriod) Then
				Dim dPrevPeriodPremiumCalculated
				dPrevPeriodPremiumCalculated = dPrevAnnualPremium/lFullPolicyPeriod*lPolicyPeriod
				'dPremium = dPrevAnnualPremiumCalculated * (lNumberOfDays / lPolicyPeriod)
				dPremium = dPrevPeriodPremiumCalculated * (lNumberOfDays / lPolicyPeriod)
				
				If (CDate(Extras.CoverStartDate) = CDate(inceptionDateTpi)) Then
					dPremium = Round(dPremium,2)
					Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
					PremiumPosted = 1
				Else
					If dPrevAnnualPremiumCalculated =< dMinPrem Then
						dPremium = 0 'No refund as we only charged minimum premium
					End If
					
					If dPremium <> 0 Then
						'We should not refund part of minimum premium
						dEarnerdPremium	= dPrevAnnualPremiumCalculated - dPremium
						If dEarnerdPremium < dMinPrem Then
							dPremium = dPremium - (dMinPrem - dEarnerdPremium)
							dPremium = Round(dPremium,2)
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
							PremiumPosted = 1
						Else
							dPremium = Round(dPremium,2)
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
							PremiumPosted = 1
						End If
					Else
						dPremium = Round(dPremium,2)
						Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium
						PremiumPosted = 1
					End If
				End If
			Else
				'Check if there was a clawback done on the previous transaction
				If dPrevMinUpliftPremium <> 0 Then
					'dPremium = (dPrevAnnualPremium - dMinPrem) * (lNumberOfDays / lPolicyPeriod)
					dPremium = (dAnnualPremium - dMinPrem) * (lNumberOfDays / lFullPolicyPeriod) ' Changed lPolicyPeriod to lFullPolicyPeriod & Changed dPrevAnnualPremium to dAnnualPremium
					dPremium = (dPremium - dPrevMinUpliftPremium) + dMinPrem
				Else
					'dPremium = dPrevAnnualPremium * (lNumberOfDays / lPolicyPeriod)
					dPremium = dAnnualPremium * (lNumberOfDays / lFullPolicyPeriod) ' Changed lPolicyPeriod to lFullPolicyPeriod & Changed dPrevAnnualPremium to dAnnualPremium
				End If
				'We refund full premium if cancelling from inception
				If (CDate(Extras.CoverStartDate) = CDate(inceptionDateTpi)) Then 
					dPremium = Round(dPremium,2)
					If (dPremium < dMinPrem) and (dAnnualPremium <> 0) Then 'Added to ensure that the full charged premium is refunded
						dPremium = dMinPrem
					End If
					Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1	
					PremiumPosted = 1
				Else
					'We must not refund minimum premium
					If dPrevAnnualPremium > 0 Then
						If dPremium > 0 And Round(dPrevAnnualPremium,2) <= Round(dMinPrem,2) Then
							dPremium = 0 'No refund as we only charged minimum premium
						End If
						
						'We should not refund part of minimum premium
						dEarnerdPremium	= dPrevAnnualPremium - dPremium
						If dEarnerdPremium < dMinPrem Then
							dPremium = dPremium - (dMinPrem - dEarnerdPremium)
							dPremium = Round(dPremium,2)
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
							PremiumPosted = 1
						Else
							dPremium = Round(dPremium,2)
							Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
							PremiumPosted = 1
						End If					   
					End If
				End If
			End If
			If PremiumPosted = 0 Then
				Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPremium * -1
			End If
		ElseIf (Extras.TransactionType = "MTR") Then
			'Charge what was returned
			Engine.Item("NASRIA").Item(sGisObject, lCount).Item(sProperty & "NASRIA_PREMIUM").value = dPrevThisPremium * -1			
		End If
	Next
	'Get all Previous Sum Insured
	If sRiskCode = "NPADOM" Then
		prevMDSumInsured = SafecDbl(vPrevSumInsured)
	ElseIf sRiskCode = "NPAMOTOR" Then
		prevMOTSumInsured = SafecDbl(vPrevSumInsured)	
	ElseIf sRiskCode = "NPAPC" Then
		prevPCSumInsured = SafecDbl(vPrevSumInsured)
	ElseIf sRiskCode = "PGSFC" Then  'Added by Badimu Kazadi - To cater for First Capital Homeloan
		prevFCSumInsured = SafecDbl(vPrevSumInsured)
	End If

End Sub

'************************************************************************************************************
'  Add risk details
'************************************************************************************************************
Sub AddRiskDetails(lRiskID,sRiskCode,sRiskDescription,dSumInsured,dRate,dPremium,dFullPeriodPremium,dCalcPremium,dMinimumPremiumUplift)
	Dim lCount
	Dim lTotalCount
	Dim sObject
	Dim sProperty
	Dim vatFreeRate
	'vatFreeRate = FormatNumber(SafecDbl(dRate / 1.15),4)
	If sRiskCode = "NPADOM" Then
		sObject = "NASRIA_MD"
		sProperty = "MD_"
	ElseIf sRiskCode = "NPAMOTOR" Then
		sObject = "NASRIA_MOT"
		sProperty = "MOTOR_"
	ElseIf sRiskCode = "NPAPC" Then
		sObject = "NASRIA_PC"
		sProperty = "PC_"
	ElseIf sRiskCode = "PGSFC" Then 'Added by Badimu Kazadi - To cater for First Capital Homeloan
		sObject = "NASRIA_FC"
		sProperty = "FC_"
	End If

	With Engine
		lCount = .Item("NASRIA").Count(sObject)
		.Item("NASRIA").NewObject(sObject)
		.Item("NASRIA").Item(sObject, lCount + 1).Item("RISKID").value = lRiskID
		.Item("NASRIA").Item(sObject, lCount + 1).Item("RISKCODE").value = sRiskCode
		.Item("NASRIA").Item(sObject, lCount + 1).Item("RISKDESCRIPTION").value = sRiskDescription
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "ACCUMULATED_SI").value = dSumInsured
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "NASRIA_RATE").value = FormatNumber(dRate,5)
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "NASRIA_PREMIUM").value = Round(dPremium,2)	
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "NASRIA_ANNUAL_PREM").value = Round(dFullPeriodPremium,2)	
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "NASRIA_ANNUAL_PREM_CALC").value = Round(dCalcPremium,2)
		.Item("NASRIA").Item(sObject, lCount + 1).Item(sProperty & "MIN_PREM_UPLIFT").value = Round(dMinimumPremiumUplift,2)		
	End With
End Sub

'************************************************************************************************************
'  Update risk details During Mid-Term Transactions
'************************************************************************************************************
Private Sub UpdateRiskDetails(sRiskDescription,sRiskCode,dPrevThisPremium,dPrevAnnualPremium,dPrevAnnualPremiumCalculated,dPrevMinUpliftPremium,lRiskID)
	Dim lCount
	Dim lTotalCount
	Dim sObject
	Dim sProperty
	Dim UpdateFlag
	
	UpdateFlag = 0
	
	If sRiskCode = "NPADOM" Then
		sObject = "NASRIA_MD"
		sProperty = "MD_"
	ElseIf sRiskCode = "NPAMOTOR" Then
		sObject = "NASRIA_MOT"
		sProperty = "MOTOR_"
	ElseIf sRiskCode = "NPAPC" Then
		sObject = "NASRIA_PC"
		sProperty = "PC_"
	ElseIf sRiskCode = "PGSFC" Then  'Added by Badimu Kazadi - To cater for First Capital Homeloan
		sObject = "NASRIA_FC"
		sProperty = "FC_"
	End If

	
	With Engine
		For lCount = 1 To .Item("NASRIA").Count(sObject)
			If .Item("NASRIA").Item(sObject, lCount).Item("RISKID").value = sRiskDescription Then
				UpdateFlag = 1
				.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_PREMIUM_PREV").value = dPrevThisPremium
				.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_PREV").value = dPrevAnnualPremium	
				.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_CALC_PREV").value = dPrevAnnualPremiumCalculated					
				.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "MIN_PREM_UPLIFT_PREV").value = dPrevMinUpliftPremium					
				Exit For
			End If
		Next
		
		If (UpdateFlag = 0) and (lRiskID <> sRiskDescription) Then
			For lCount = 1 To .Item("NASRIA").Count(sObject)
				If .Item("NASRIA").Item(sObject, lCount).Item("RISKID").value = lRiskID Then
					.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_PREMIUM_PREV").value = dPrevThisPremium
					.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_PREV").value = dPrevAnnualPremium	
					.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "NASRIA_ANNUAL_PREM_CALC_PREV").value = dPrevAnnualPremiumCalculated					
					.Item("NASRIA").Item(sObject, lCount).Item(sProperty & "MIN_PREM_UPLIFT_PREV").value = dPrevMinUpliftPremium					
					Exit For
				End If
			Next
		End If
	End With
End Sub


Sub CalculateTotalPremium(inceptionDateTpi,renewalDate,lNumberOfDays,lPolicyPeriod,dMDMinPrem,dMOTMinPrem,dPCMinPrem,prevMDSumInsured,prevMOTSumInsured,prevPCSumInsured,prevFCSumInsured,lCoverStartDate,dTotalDeletedMD,dTotalDeletedMot,dTotalDeletedPC,dTotalDeletedFC,bIsPeriodChanged,bIsPeriodReduced)
	Dim lCount
	Dim vResults
	Dim sRatingSectionCode
	Dim dMDFullPeriodPremium
	Dim dMOTFullPeriodPremium
	Dim dPCFullPeriodPremium
	Dim dFCFullPeriodPremium
	Dim dMDPrevPremium
	Dim dMOTPrevPremium
	Dim dPCPrevPremium
	Dim dFCPrevPremium
	DIm dMDPremium
	Dim dMOTPremium
	Dim dPCPremium
	Dim dFCPremium

	Call Extras.CallNamedStoredProcedure(6722, "Get_Previous_Annual_Premium", vResults)
	If IsArray(vResults) Then
		For lCount = 0 To UBound(vResults, 2)
			sRatingSectionCode = vResults(0, lCount)
			Select Case sRatingSectionCode
				
				'Material Damage
				Case "NASRIAMDD"
					dMDFullPeriodPremium = SafecDbl(vResults(1, lCount))
				
				'Motor
				Case "NASRIAMOTD"
					dMOTFullPeriodPremium = SafecDbl(vResults(1, lCount))

				'Pleasure Craft
				Case "NASRIAPCD"
					dPCFullPeriodPremium = SafecDbl(vResults(1, lCount))
					
				'First Capital Homeloan
				Case "NASRIAMDFC"  'Added by Badimu Kazadi - To cater for First Capital Homeloan
					dFCFullPeriodPremium = SafecDbl(vResults(1, lCount))
			 End Select
		 Next
	End If
	
	With Engine
		'Material Cummulative Values
		Dim sMDRiskID
		Dim dMDTotalSi
	    Dim dMDTotalPeriod
		Dim dMDTotalPeriodPrem
		dIM dMDTotalPeriodPrevPrem
		Dim dMDTotalPrem
		Dim dMDRate

		For lCount = 1 To .Item("NASRIA").Count("NASRIA_MD")
			sMDRiskID = SafecStr(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("RISKID").value)
			If sMDRiskID <> "0" Then
				dMDTotalSi =  dMDTotalSi + SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_ACCUMULATED_SI").value)
				dMDTotalPeriod = dMDTotalPeriod + SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_NASRIA_ANNUAL_PREM").value)
				dMDTotalPeriodPrem = dMDTotalPeriodPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_NASRIA_ANNUAL_PREM_CALC").value)
				dMDTotalPeriodPrevPrem = dMDTotalPeriodPrevPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_NASRIA_ANNUAL_PREM_PREV").value)			
				dMDTotalPrem = dMDTotalPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_NASRIA_PREMIUM").value)
				dMDRate = SafecDbl(.Item("NASRIA").Item("NASRIA_MD", lCount).Item("MD_NASRIA_RATE").value)
			End If
		Next
		
		.Item("NASRIA").Item("MD_DOM_ACCUMULATED_SI").value = dMDTotalSi
		.Item("NASRIA").Item("MD_DOM_NASRIA_PERIOD_PREMIUM").value = dMDTotalPeriod 'dMDTotalPeriodPrem
		.Item("NASRIA").Item("MD_DOM_NASRIA_PREMIUM").value	= dMDTotalPrem - dTotalDeletedMD
		'.Item("NASRIA").Item("MD_DELETED_RISK_PREMIUM").value	= dTotalDeletedMD
		
		
		'REMOVED - For Annual Premium on Document
		' If IsEmpty(dMDTotalSi) Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM").value = 0
		' ElseIf dMDTotalPrem = 0 AND Extras.TransactionType <> "MTR" Then
			' 'dMDFullPeriodPremium = dMDFullPeriodPremium - dMDDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM").value = dMDFullPeriodPremium - dTotalDeletedMD
		' ElseIf Extras.TransactionType = "MTR" Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM").value = dMDTotalPeriodPrem
		' Else
			' ' If Extras.CoverStartDate <> inceptionDateTpi Then
				' ' dMDTotalPeriodPrevPrem = dMDTotalPeriodPrevPrem - dMDDeletedPremium
			' ' End If
			' .Item("NASRIA").Item("ANNUAL_PREMIUM").value = dMDTotalAnnual + dMDTotalPrem - dTotalDeletedMD
		' End If
		
		'Added for Annual Premium
		.Item("NASRIA").Item("ANNUAL_PREMIUM").value = dMDTotalPeriod

		'Motor Cummulative Values
		Dim sMotRiskID
		Dim dMotTotalSi
		Dim dMotTotalPeriod
		Dim dMotTotalPeriodPrem
		dIM dMotTotalPeriodPrevPrem
		Dim dMOTTotalPrem
		Dim dMOTRate

		For lCount = 1 To .Item("NASRIA").Count("NASRIA_MOT")
			sMotRiskID = SafecStr(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("RISKID").value)
			If sMotRiskID <> "0" Then
				dMotTotalSi =  dMotTotalSi + SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_ACCUMULATED_SI").value)
				dMotTotalPeriod = dMotTotalPeriod + SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_NASRIA_ANNUAL_PREM").value)
				dMotTotalPeriodPrem = dMotTotalPeriodPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_NASRIA_ANNUAL_PREM_CALC").value)
				dMotTotalPeriodPrevPrem = dMotTotalPeriodPrevPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_NASRIA_ANNUAL_PREM_PREV").value)			
				dMOTTotalPrem = dMOTTotalPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_NASRIA_PREMIUM").value)
				dMOTRate = SafecDbl(.Item("NASRIA").Item("NASRIA_MOT", lCount).Item("MOTOR_NASRIA_RATE").value)
			End If
		Next
		
		.Item("NASRIA").Item("MOTOR_ACCUMULATED_SI").value = dMotTotalSi
		.Item("NASRIA").Item("MOTOR_NASRIA_PERIOD_PREMIUM").value = dMotTotalPeriod 'dMotTotalPeriodPrem
		.Item("NASRIA").Item("MOTOR_NASRIA_PREMIUM").value	= 	dMOTTotalPrem - dTotalDeletedMot
		'.Item("NASRIA").Item("MOT_DELETED_RISK_PREMIUM").value	= dTotalDeletedMot
		
		'REMOVED - For Annual Premium on Document
		' If IsEmpty(dMotTotalSi) Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_MOT").value = 0
		' ElseIf dMOTTotalPrem = 0 AND Extras.TransactionType <> "MTR" Then
			' 'dMOTFullPeriodPremium = dMOTFullPeriodPremium - dMOTDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_MOT").value = dMOTFullPeriodPremium - dTotalDeletedMot
		' ElseIf Extras.TransactionType = "MTR" Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_MOT").value = dMotTotalPeriodPrem
		' Else
			' 'dMotTotalPeriodPrevPrem = dMotTotalPeriodPrevPrem - dMOTDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_MOT").value = dMOTTotalAnnual + dMOTTotalPrem - dTotalDeletedMot
		' End If
		
		'Added for Annual Premium							
		.Item("NASRIA").Item("ANNUAL_PREMIUM_MOT").value = dMotTotalPeriod
				
		'Pleasure Craft Cummulative Values
		Dim sPCRiskID
		Dim dPCTotalSi
		Dim dPCTotalPeriod
		Dim dPCTotalPeriodPrem
		dIM dPCTotalPeriodPrevPrem
		Dim dPCTotalPrem
		Dim dPCRate
		Dim dPCMinUplift

		.Item("NASRIA").Item("PLCounter").Value	= .Item("NASRIA").Count("NASRIA_PC")
		For lCount = 1 To .Item("NASRIA").Count("NASRIA_PC")
			sPCRiskID = SafecStr(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("RISKID").value)
			If sPCRiskID <> "0" Then
				dPCTotalSi =  dPCTotalSi + SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_ACCUMULATED_SI").value)
				dPCTotalPeriod = dPCTotalPeriod + SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_NASRIA_ANNUAL_PREM").value)
				dPCTotalPeriodPrem = dPCTotalPeriodPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_NASRIA_ANNUAL_PREM_CALC").value)
				dPCTotalPeriodPrevPrem = dPCTotalPeriodPrevPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_NASRIA_ANNUAL_PREM_PREV").value)			
				dPCTotalPrem = dPCTotalPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_NASRIA_PREMIUM").value)
				dPCRate = SafecDbl(.Item("NASRIA").Item("NASRIA_PC", lCount).Item("PC_NASRIA_RATE").value)
			End If
		Next
		
		.Item("NASRIA").Item("PC_ACCUMULATED_SI").value = dPCTotalSi
		.Item("NASRIA").Item("PC_NASRIA_PERIOD_PREMIUM").value = dPCTotalPeriod 'dPCTotalPeriodPrem
		.Item("NASRIA").Item("PC_NASRIA_PREMIUM").value	= dPCTotalPrem - dTotalDeletedPC
		'.Item("NASRIA").Item("PC_DELETED_RISK_PREMIUM").value	= dTotalDeletedPC
		
		'REMOVED - For Annual Premium on Document
		' If IsEmpty(dPCTotalSi) Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_PC").value = 0
		' ElseIf dPCTotalPrem = 0 AND Extras.TransactionType <> "MTR" Then
			' 'dPCFullPeriodPremium = dPCFullPeriodPremium - dPCDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_PC").value = dPCFullPeriodPremium - dTotalDeletedPC
		' ElseIf Extras.TransactionType = "MTR" Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_PC").value = dPCTotalPeriodPrem
		' Else
			' 'dPCTotalPeriodPrevPrem = dPCTotalPeriodPrevPrem - dPCDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_PC").value = dPCTotalAnnual + dPCTotalPrem - dTotalDeletedPC
		' End If
		
		'Added for Annual Premium
		.Item("NASRIA").Item("ANNUAL_PREMIUM_PC").value = dPCTotalPeriod
		
		
		'First Capital Homeloan Cummulative Values
		Dim sFCRiskID
		Dim dFCTotalSi
		Dim dFCTotalPeriod
		Dim dFCTotalPeriodPrem
		dIM dFCTotalPeriodPrevPrem
		Dim dFCTotalPrem
		Dim dFCRate
		Dim dFCMinUplift

		.Item("NASRIA").Item("FCCounter").Value	= .Item("NASRIA").Count("NASRIA_FC")
		For lCount = 1 To .Item("NASRIA").Count("NASRIA_FC")
			sFCRiskID = SafecStr(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("RISKID").value)
			If sFCRiskID <> "0" Then
				dFCTotalSi =  dFCTotalSi + SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_ACCUMULATED_SI").value)
				dFCTotalPeriod = dFCTotalPeriod + SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_NASRIA_ANNUAL_PREM").value)
				dFCTotalPeriodPrem = dFCTotalPeriodPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_NASRIA_ANNUAL_PREM_CALC").value)
				dFCTotalPeriodPrevPrem = dFCTotalPeriodPrevPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_NASRIA_ANNUAL_PREM_PREV").value)			
				dFCTotalPrem = dFCTotalPrem + SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_NASRIA_PREMIUM").value)
				dFCRate = SafecDbl(.Item("NASRIA").Item("NASRIA_FC", lCount).Item("FC_NASRIA_RATE").value)
			End If
		Next
		
		.Item("NASRIA").Item("FC_ACCUMULATED_SI").value = dFCTotalSi
		.Item("NASRIA").Item("FC_NASRIA_PERIOD_PREMIUM").value = dFCTotalPeriod 'dFCTotalPeriodPrem
		.Item("NASRIA").Item("FC_NASRIA_PREMIUM").value	= dFCTotalPrem - dTotalDeletedFC
		'.Item("NASRIA").Item("FC_DELETED_RISK_PREMIUM").value	= dTotalDeletedPC
		
		'REMOVED - For Annual Premium on Document
		' If IsEmpty(dFCTotalSi) Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_FC").value = 0
		' ElseIf dFCTotalPrem = 0 AND Extras.TransactionType <> "MTR" Then
			' 'dFCFullPeriodPremium = dFCFullPeriodPremium - dFCDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_FC").value = dFCFullPeriodPremium - dTotalDeletedFC
		' ElseIf Extras.TransactionType = "MTR" Then
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_FC").value = dFCTotalPeriodPrem
		' Else
			' 'dFCTotalPeriodPrevPrem = dFCTotalPeriodPrevPrem - dFCDeletedPremium
			' .Item("NASRIA").Item("ANNUAL_PREMIUM_FC").value = dFCTotalPeriodPrevPrem + dFCTotalPrem - dTotalDeletedFC
		' End If
		
		'Added for Annual Premium
		.Item("NASRIA").Item("ANNUAL_PREMIUM_FC").value = dFCTotalPeriod
		
		
		'*****************************************************
		' Output New Business, Renewal or MTA from inception
		'*****************************************************
		'Added Muhammad Adam - 19/02/2021 - For Deleted Risks
		dMDTotalPrem = dMDTotalPrem - dTotalDeletedMD
		dMOTTotalPrem = dMOTTotalPrem - dTotalDeletedMot
		dPCTotalPrem = dPCTotalPrem - dTotalDeletedPC
		dFCTotalPrem = dFCTotalPrem - dTotalDeletedFC
		
		'If (Extras.TransactionType = "NB") Or (Extras.TransactionType = "REN" ) Or ((CDate(Extras.CoverStartDate) = CDate(inceptionDateTpi)) And (Extras.TransactionType = "MTA")) Then
		If (Extras.TransactionType = "NB") Or (Extras.TransactionType = "REN" ) Then		
			'Output Material Damage
			If dMDTotalSi > 0 Then
				Call GenerateOutput(dMDTotalSi, dMDRate, dMDTotalPrem, "NASRIAMDD", 1,1)
			End If
			
			'Output Motor
			If dMotTotalSi > 0 Then
				Call GenerateOutput(dMotTotalSi, dMOTRate, dMOTTotalPrem, "NASRIAMOTD", 1,1)							 
			End If
			
			'Output Pleasure Craft
			If dPCTotalSi > 0 Then
				Call GenerateOutput(dPCTotalSi, dPCRate, dPCTotalPrem, "NASRIAPCD", 1,1)								
			End If
			
			'Output First Capital Homeloan
			If dFCTotalSi > 0 Then
				Call GenerateOutput(dFCTotalSi, dFCRate, dFCTotalPrem, "NASRIAMDFC", 1,1)								
			End If
		
		'*****************************************************
		' MTAs (not from inception)
		'*****************************************************
		'ElseIf (Extras.TransactionType = "MTA") And (CDate(Extras.CoverStartDate) <> CDate(inceptionDateTpi)) Then
		ElseIf (Extras.TransactionType = "MTA") Then
			'Check if the period has changed and replace with the new total period
			If (bIsPeriodChanged = 1) And (bIsPeriodReduced = 1) Then
				dMDFullPeriodPremium = dMDTotalPeriodPrem
				dMOTFullPeriodPremium = dMotTotalPeriodPrem
				dPCFullPeriodPremium = dPCTotalPeriodPrem
				dFCFullPeriodPremium = dFCTotalPeriodPrem
			End If
			If IsEmpty(dMDFullPeriodPremium) AND (dMDTotalPrem = 0) Then
				'Added 22/06/2021
				If (dMDTotalPeriodPrem < 2.5) AND (dMDTotalPeriodPrem <> 0) Then
					dMDTotalPeriodPrem = 2.5
				End If
				dMDFullPeriodPremium = dMDTotalPeriodPrem
			End If
			If IsEmpty(dMDFullPeriodPremium) AND (dMDTotalPrem <> 0) AND (dMDTotalPeriodPrevPrem <> 0) Then
				dMDFullPeriodPremium = dMDTotalPeriodPrem - dMDTotalPrem
			End If
			'Check if the period has changed
			'Output Material Damage
			If dMDTotalSi > 0 OR dMDFullPeriodPremium <> 0 Then		 
				Call GenerateOutput(dMDTotalSi, dMDRate, dMDFullPeriodPremium + dMDTotalPrem, "NASRIAMDD", 1,1)
			End If
			If IsEmpty(dMOTFullPeriodPremium) AND (dMOTTotalPrem = 0) Then
				'Added 22/06/2021
				If (dMotTotalPeriodPrem < 2.5) AND (dMotTotalPeriodPrem <> 0) Then
					dMotTotalPeriodPrem = 2.5
				End If
				dMOTFullPeriodPremium = dMotTotalPeriodPrem
			End If
			If IsEmpty(dMOTFullPeriodPremium) AND (dMOTTotalPrem <> 0) AND (dMOTTotalPeriodPrevPrem <> 0) Then
				dMOTFullPeriodPremium = dMotTotalPeriodPrem - dMOTTotalPrem
			End If
			'Output Motor
			If dMotTotalSi > 0 OR dMOTFullPeriodPremium <> 0 Then
				Call GenerateOutput(dMotTotalSi, dMOTRate, dMOTFullPeriodPremium + dMOTTotalPrem, "NASRIAMOTD", 1,1)
			End If
			If IsEmpty(dPCFullPeriodPremium) AND (dPCTotalPrem = 0) Then
				'Added 22/06/2021
				If (dPCTotalPeriodPrem < 2.5) AND (dPCTotalPeriodPrem <> 0) Then
					dPCTotalPeriodPrem = 2.5
				End If
				dPCFullPeriodPremium = dPCTotalPeriodPrem
			End If
			If IsEmpty(dPCFullPeriodPremium) AND (dPCTotalPrem <> 0) AND (dPCTotalPeriodPrevPrem <> 0) Then
				dPCFullPeriodPremium = dPCTotalPeriodPrem - dPCTotalPrem
			End If
			'Output Pleasure Craft
			If dPCTotalSi > 0 OR dPCFullPeriodPremium <> 0 Then
				Call GenerateOutput(dPCTotalSi, dPCRate, dPCFullPeriodPremium + dPCTotalPrem, "NASRIAPCD", 1,1)
			End If
			If IsEmpty(dFCFullPeriodPremium) AND (dFCTotalPrem = 0) Then
				'Added 22/06/2021
				If (dFCTotalPeriodPrem < 2.5) AND (dFCTotalPeriodPrem <> 0) Then
					dFCTotalPeriodPrem = 2.5
				End If
				dFCFullPeriodPremium = dFCTotalPeriodPrem
			End If
			If IsEmpty(dFCFullPeriodPremium) AND (dFCTotalPrem <> 0) AND (dFCTotalPeriodPrevPrem <> 0) Then
				dFCFullPeriodPremium = dFCTotalPeriodPrem - dFCTotalPrem
			End If
			'Output First Capital Homeloan
			If dFCTotalSi > 0 OR dFCFullPeriodPremium <> 0 Then
				Call GenerateOutput(dFCTotalSi, dFCRate, dFCFullPeriodPremium + dFCTotalPrem, "NASRIAMDFC", 1,1)
			End If
		
		'*************************************************
		' MTCs - premiums are displayed on the screen as negatives
		'*************************************************
		ElseIf (Extras.TransactionType = "MTC") Then
			'Material Damage
			If dMDFullPeriodPremium > 0 Then
				If dMDTotalPrem > 0 And Round(dMDTotalPrem,2) <= Round(dMDMinPrem,2) Then
					dMDTotalPrem = 0 'No refund as we charged minimum premium
				End If				
				Call GenerateOutput(dMDTotalSi, dMDRate, dMDFullPeriodPremium + dMDTotalPrem, "NASRIAMDD", 1,1)											
			End If
			
			'Motor
			If dMOTFullPeriodPremium > 0 Then		
				If dMOTTotalPrem > 0 And Round(dMOTTotalPrem,2) <= Round(dMOTMinPrem,2) Then
					dMOTTotalPrem = 0 'No refund as we charged minimum premium
				End If				
				Call GenerateOutput(dMotTotalSi, dMOTRate, dMOTFullPeriodPremium + dMOTTotalPrem, "NASRIAMOTD", 1,1)			  
			End If

			'Pleasure craft
			If dPCFullPeriodPremium > 0 Then
				If dPCTotalPrem > 0 And Round(dPCTotalPrem,2) <= Round(dPCMinPrem,2) Then
					dPCTotalPrem = 0 'No refund as we charged minimum premium
				End If				
				Call GenerateOutput(dPCTotalSi, dPCRate, dPCFullPeriodPremium + dPCTotalPrem, "NASRIAPCD", 1,1)
			End If
			
			
			'First Capital Homeloan
			If dFCFullPeriodPremium > 0 Then
				If dFCTotalPrem > 0 And Round(dFCTotalPrem,2) <= Round(dPCMinPrem,2) Then
					dFCTotalPrem = 0 'No refund as we charged minimum premium
				End If				
				Call GenerateOutput(dFCTotalSi, dFCRate, dFCFullPeriodPremium + dFCTotalPrem, "NASRIAMDFC", 1,1)
			End If
			
		'*************************************************
		' MTRs
		'*************************************************
		ElseIf Extras.TransactionType = "MTR" Then	
			'Get the permium this premium that was posted
			Call Extras.CallNamedStoredProcedure(6722, "GetPreviousVersionRatingSection", vResults)
			If IsArray(vResults) Then
				For lCount = 0 To UBound(vResults, 2)
					sRatingSectionCode = vResults(0, lCount)
					Select Case sRatingSectionCode
						
						'Material Damage
						Case "NASRIAMDD"
							dMDPrevPremium = SafecDbl(vResults(1, lCount)) * -1
						
						'Motor
						Case "NASRIAMOTD"
							dMOTPrevPremium = SafecDbl(vResults(1, lCount)) * -1 

						'Pleasure Craft
						Case "NASRIAPCD"
							dPCPrevPremium = SafecDbl(vResults(1, lCount)) * -1 
							
						'First Capital Homeloan
						Case "NASRIAMDFC"
							dFCPrevPremium = SafecDbl(vResults(1, lCount)) * -1
					 End Select
				 Next
			End If

			'To output the premium we need we first reverse what the core system will Automatically output and post what we want
			'Material Damage
			If dMDTotalSi > 0 OR dMDPrevPremium <> 0 Then
				Call GenerateOutput(dMDTotalSi, dMDRate, dMDPrevPremium + dMDTotalPrem, "NASRIAMDD", 1,1)
			End If
			
			'Motor
			If dMotTotalSi > 0 OR dMOTPrevPremium <> 0 Then
				Call GenerateOutput(dMotTotalSi, dMOTRate, dMOTPrevPremium + dMOTTotalPrem, "NASRIAMOTD", 1,1)
			End If
			
			'Pleasure Craft
			If dPCTotalSi > 0 OR dPCPrevPremium <> 0 Then
				Call GenerateOutput(dPCTotalSi, dPCRate, dPCPrevPremium + dPCTotalPrem, "NASRIAPCD", 1,1)
			End If
			
			'First Capital Homeloan
			If dFCTotalSi > 0 OR dFCPrevPremium <> 0 Then
				Call GenerateOutput(dFCTotalSi, dFCRate, dFCPrevPremium + dFCTotalPrem, "NASRIAMDFC", 1,1)
			End If
	
		End If
		
	End With
End Sub

'************************************************************************************************************
'  Add risk details
'************************************************************************************************************
Sub DeleleRiskDetails(sObject)
	Dim lCount
	Dim lTotalCount
	
	With Engine
		'Delete Risks Details First
		For lTotalCount = .Item("NASRIA", lCount).Count(sObject) To 1 Step -1
			.Item("NASRIA", lCount).Item(sObject, lTotalCount).DeleteObject()
		Next		
	End With
End Sub

Function GenerateOutput(cSumInsured, cRate, cPremium, sRatingSection, bIsDisableNewProrata,bIsDisableOriginalProrata)
	Dim iCount
	'If cPremium <> 0 Then
		Engine.NewObject("SDNASRIA_Output")
		iCount = Engine.Count("SDNASRIA_Output")
		Engine.Item("SDNASRIA_Output", iCount).Item("SUM_INSURED").Value = cSumInsured
		Engine.Item("SDNASRIA_Output", iCount).Item("RATE").Value = cRate
		Engine.Item("SDNASRIA_Output", iCount).Item("PREMIUM").Value = cPremium
		Engine.Item("SDNASRIA_Output", iCount).Item("RISK_RATING_SECTION").Value = sRatingSection
		Engine.Item("SDNASRIA_Output", iCount).Item("Disable_New_ProRata").Value = bIsDisableNewProrata
		Engine.Item("SDNASRIA_Output", iCount).Item("Disable_Original_ProRata").Value = bIsDisableOriginalProrata
		'Engine.Item("SDNASRIA_Output", iCount).Item("country_id").Value = 3 '3 is for Namibia
		
	'End If 
End Function

Function GenerateStampDutyOutput(cSumInsured, cRate, cPremium, sRatingSection)
	Dim iCount
	'If cPremium <> 0 Then
		Engine.NewObject("SDNASRIA_Output")
		iCount = Engine.Count("SDNASRIA_Output")
		Engine.Item("SDNASRIA_Output", iCount).Item("SUM_INSURED").Value = cSumInsured
		Engine.Item("SDNASRIA_Output", iCount).Item("RATE").Value = cRate
		Engine.Item("SDNASRIA_Output", iCount).Item("PREMIUM").Value = cPremium
		Engine.Item("SDNASRIA_Output", iCount).Item("RISK_RATING_SECTION").Value = sRatingSection
		'Engine.Item("SDNASRIA_Output", iCount).Item("country_id").Value = 3 '3 is for Namibia
		
	'End If 
End Function

Function CalculateDeletedPremium(inceptionDateTpi,renewalDate,dMinPrem,dRate,lNumberOfDays,lPolicyPeriod,lFullPolicyPeriod,lOriginalPeriod,lRiskID,sRiskCode,sRiskDescription,dSumInsured)
	Dim dDeletedPremium
	Dim dFullPeriodPremium
	Dim dPremium
	Dim dEarnedPremium
	Dim dCalcPremium, dMinimumPremiumUplift
	Dim vExtraParameters, vResults, lCount
	Dim dDeletedRiskPrem
	Dim AttachmentDate
	Dim dmtaDate
	
	dmtaDate = Extras.CoverStartDate
	
	vExtraParameters = array("sRiskCode",sRiskCode,"lRiskID",lRiskID,"dMTADate", CDate(dmtaDate))
	Call Extras.CallNamedStoredProcedure(clng(6722),cstr("NASRIA_GetDeletedRiskPremium"), vResults, vExtraParameters)
	If IsArray(vResults) = True Then
		For lCount = 0 to UBound(vResults,2)
			dDeletedRiskPrem = vResults(0, lCount)
			AttachmentDate = vResults(1, lCount)
		Next
	End If
	
	'Set the RiskID
	lRiskID = 0
	dCalcPremium = 0
	dMinimumPremiumUplift = 0
	
	'Calculate Full Period Premiums
	dFullPeriodPremium = dSumInsured * dRate * 0.01
	
	If lPolicyPeriod <> lOriginalPeriod Then
		dPremium = dFullPeriodPremium * (lNumberOfDays  / lPolicyPeriod)
		'dPremium = dDeletedRiskPrem * (lNumberOfDays  / lPolicyPeriod) 'Removed 28/06/2021 - Need to use full policy period to calculate the refund
	Else
		dPremium = dFullPeriodPremium * (lNumberOfDays  / lFullPolicyPeriod)
		'dPremium = dDeletedRiskPrem * (lNumberOfDays  / lFullPolicyPeriod) 'Removed 28/06/2021 - Need to use full policy period to calculate the refund
	End If
	'Apply minimum premium
	If dSumInsured > 0 Then
		If dPremium > 0 And dPremium < dMinPrem And (dDeletedRiskPrem - dPremium) < dMinPrem Then
			dPremium = dMinPrem
			If dFullPeriodPremium < dMinPrem Then
				dFullPeriodPremium = dMinPrem
			End If
		End If				
	End If
	
	If (CDate(Extras.CoverStartDate) = CDate(inceptionDateTpi)) Then 
		dDeletedPremium = dFullPeriodPremium
	Else
		'We must not refund minimum premium
		If dFullPeriodPremium > 0 Then
			If dPremium > 0 And Round(dFullPeriodPremium,2) <= Round(dMinPrem,2) Then
				dPremium = 0 'No refund as we only charged minimum premium
			End If
			
			'We should not refund part of minimum premium
			dEarnedPremium	= dDeletedRiskPrem - dPremium
			If dEarnedPremium < dMinPrem Then
				dPremium = dPremium - (dMinPrem - dEarnedPremium)
				dDeletedPremium = dPremium
			Else
				dDeletedPremium = dPremium
			End If					   
		End If
	End If
	
	If (CDate(Extras.CoverStartDate) = CDate(AttachmentDate)) Then
		dPremium = dDeletedRiskPrem
		dDeletedPremium = dDeletedRiskPrem
	End If
	dPremium = dPremium * -1
	sRiskDescription = "Deleted - " + sRiskDescription
	Call AddRiskDetails(lRiskID,sRiskCode,sRiskDescription,dSumInsured,dRate,dPremium,dFullPeriodPremium,dCalcPremium,dMinimumPremiumUplift)
	CalculateDeletedPremium = SafecDbl(dDeletedPremium)
End Function															

Function SafecInt(vIn)
    SafecInt = 0
    On Error Resume Next
    SafecInt = CInt(vIn)
    On Error GoTo 0
    On Error GoTo 0
End Function
 
Function SafecDbl(vIn)
    SafecDbl = 0
    On Error Resume Next
    SafecDbl = CDbl(vIn)
    On Error GoTo 0
End Function
 
Function SafecStr(vIn)
    SafecStr = ""
    On Error Resume Next
    SafecStr = CStr(vIn)
    On Error GoTo 0
End Function

'**************************************************************
' write to log file
'**************************************************************
Sub WriteLog(sMsg)
	Dim sMsgLocal
	Dim oLogFile
	Dim oRegistry
	Dim oFSO
	Dim sLogfile
	sLogfile = "c:\Pure\Nasria.log"

	if sLogfile = "" then
		Set oRegistry = CreateObject("Wscript.shell")
		sLogfile = oRegistry.RegRead("HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Pure\Architecture\Common\LogFileName")
		set oRegistry = nothing
	end if

	Set oFSO = CreateObject("Scripting.FileSystemObject")

	'create log file or Open log file for appending
	if oFSO.FileExists(sLogfile) then
		set oLogFile = oFSO.OpenTextFile(sLogfile, 8)
	else
		set oLogFile = oFSO.CreateTextFile(sLogfile, True)
	end if

	sMsgLocal = "Date\Time: " & Date & " " & Time & vbcrlf
	sMsgLocal = sMsgLocal & "Message: " & sMsg & vbcrlf
	sMsgLocal = sMsgLocal & "*************************************************************************" & vbcrlf

	oLogFile.WriteLine(sMsgLocal)

	oLogFile.close

	set oLogFile = nothing
	set oFSO = nothing


End sub