        '**********************************************************************************************
        'Load Defaults from UDLs
        '**********************************************************************************************
        Sub GetClaimUserLevel()
         Dim vResult
         Dim sSQL 
         Dim iUserName
         Dim UserAuthorityGroup
         iUserName = Extras.Username
        	
        	sSQL = "SELECT usergroup FROM UDL_CLAIM_UGA WHERE code = '" & iUserName & "'" 	
        	Call Extras.CallNamedStoredProcedure(4033, "RetrieveData", vResult, Array("sSQL", sSQL))
        		
        	If IsArray(vResult) Then
        			UserAuthorityGroup = vResult(0, 0)
        	End If
        	
        	'Assign Defaults Claim User Group Value
        	With Engine.Item("GENERAL")
        		'Extras.Username Extras.GetField("UDL_CLAIM_UGA", "usergroup", Extras.Username,Extras.CoverStartDate)
        		.Item("UserGroup").Value = UserAuthorityGroup 
        		
        		If (.Item("SALVAGESTAT").Value ="") Or IsNull(.Item("SALVAGESTAT").Value) Then
                    .Item("SALVAGESTAT").Value = 1
                End If 
        		
        		If (.Item("LEGALSTAT").Value ="") Or IsNull(.Item("LEGALSTAT").Value) Then
                    .Item("LEGALSTAT").Value = 15
                End If
        		
        		If (.Item("CLMDECISION").Value ="") Or IsNull(.Item("CLMDECISION").Value) Then
                    .Item("CLMDECISION").Value = 5
                End If
        		
        		
        	End With
        	
        End Sub

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        Sub PullFromRiskGeneral()
        		'Instantiate Risk object(s)
        		Extras.RiskDataEngine.NewObject("GENERAL")
        		Extras.RiskDataEngine.NewObject("ADDRESS")
        
        		'Instantiate Claims object(s)
        		Engine.NewObject("GENERAL")
        		Engine.NewObject("ADDRESS")
        
        		'---------------------------------------------------
        		'---START: Non-child screen properties population---	
        		'---------------------------------------------------
        		Dim RiskObject, ClaimObject
        
        		RiskObject = "GENERAL"
        		ClaimObject = "GENERAL"
        
        		'---------------Industry---------------'
        		Call ToClaim(RiskObject,ClaimObject,"PRIMARY_INDUSTRY")
        		Call ToClaim(RiskObject,ClaimObject,"SECOND_INDUSTRY")
        		Call ToClaim(RiskObject,ClaimObject,"TERTIARY_INDUSTRY")
        		Call ToClaim(RiskObject,ClaimObject,"INDUSTRY")
        		
        		'---------------Address---------------'
        		RiskObject = "ADDRESS"
        		ClaimObject = "ADDRESS"
        		Call ToClaim(RiskObject,ClaimObject,"ADDRESSLIST")
        		Call ToClaim(RiskObject,ClaimObject,"LINE1")
        		Call ToClaim(RiskObject,ClaimObject,"SUBURB")
        		Call ToClaim(RiskObject,ClaimObject,"TOWN")
        		Call ToClaim(RiskObject,ClaimObject,"POSTCODE")
        		Call ToClaim(RiskObject,ClaimObject,"REGION")
        		Call ToClaim(RiskObject,ClaimObject,"COUNTRY")
        End Sub

        
        Function ToClaim(RObject, CObject, PropName)
        	Dim Val	
        	Val = Extras.RiskDataEngine.Item(RObject).Item(PropName).Value
        	Engine.Item(CObject).Item(PropName).Value = Val
        End Function
        
        Function ToClaimDiff(RObject, CObject, PropNameRisk, PropNameClaim)
        	Dim Val	
        	Val = Extras.RiskDataEngine.Item(RObject).Item(PropNameRisk).Value
        	Engine.Item(CObject).Item(PropNameClaim).Value = Val
        End Function
        
        Function ToChildClaim(RChild, CParent, Cobject, Index, PropName)
        	Dim Val
        	Val = Extras.RiskDataEngine.Item(RChild,Index).Item(PropName).Value
        	Engine.Item(CParent).Item(CObject, Index).Item(PropName).Value = Val
        End Function
        
        Function ToGrandChildClaim(RChild, RGChild, CParent, CChild, Cobject, Index, ChildIndex, PropName)
        	Dim Val
        	Val = Extras.RiskDataEngine.Item(RChild,Index).Item(RGChild,ChildIndex).Item(PropName).Value
        	Engine.Item(CParent).Item(CChild, Index).Item(CObject, ChildIndex).Item(PropName).Value = Val
        End Function
        '**********************************************************************************************
        'Load Risk Data to Claim Screens
        '**********************************************************************************************
        Sub PullFromRiskEE()
        	
        	Dim iTotalCount
        	Dim iCount
        	
        	Engine.Item("GENERAL").Item("IS_ELECEQUIP").Value = Extras.RiskDataEngine.Item("GENERAL").Item("IS_ELECEQUIP").Value 
        	
        	'Total Sum insured
        	Engine.Item("ELECTEQUIP").Item("ATTACHMENTDATE").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ATTACHMENTDATE").Value 
        	Engine.Item("ELECTEQUIP").Item("EFFECTIVEDATE").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EFFECTIVEDATE").Value 
        	
        	'Past claims count
        	Engine.Item("ELECTEQUIP").Item("EE0_12_MONTHS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE0_12_MONTHS").Value 
        	Engine.Item("ELECTEQUIP").Item("EE0_12_AMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE0_12_AMOUNT").Value 
        	Engine.Item("ELECTEQUIP").Item("EE13_24_MONTHS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE13_24_MONTHS").Value 
        	Engine.Item("ELECTEQUIP").Item("EE13_24_AMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE13_24_AMOUNT").Value 
        	Engine.Item("ELECTEQUIP").Item("EE25_36_MONTHS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE25_36_MONTHS").Value 
        	Engine.Item("ELECTEQUIP").Item("EE25_36_AMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE25_36_AMOUNT").Value 
        	
        	'first amount payable
        	Engine.Item("ELECTEQUIP").Item("FAP_PERC").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("FAP_PERC").Value 
        	Engine.Item("ELECTEQUIP").Item("FAP_MIN_AMT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("FAP_MIN_AMT").Value 
        	Engine.Item("ELECTEQUIP").Item("FAP_MAX_AMT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("FAP_MAX_AMT").Value 
        	Engine.Item("ELECTEQUIP").Item("THEFT_PERC").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("THEFT_PERC").Value 
        	Engine.Item("ELECTEQUIP").Item("THEFT_MIN_AMT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("THEFT_MIN_AMT").Value 
        	Engine.Item("ELECTEQUIP").Item("THEFT_MAX_AMT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("THEFT_MAX_AMT").Value 
        	
        	Engine.Item("ELECTEQUIP").Item("TOTALSI").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("TOTALSI").Value 
        	
        	'extension
        	Engine.Item("EE_EXTENSIONS").Item("IS_ADD").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_ADD").Value 
        	Engine.Item("EE_EXTENSIONS").Item("ADD_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("ADD_LOI").Value 
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_COW").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_COW").Value 
        	Engine.Item("EE_EXTENSIONS").Item("COW_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("COW_LOI").Value 
        	Engine.Item("EE_EXTENSIONS").Item("COW_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("COW_FAP_PERC").Value
        	Engine.Item("EE_EXTENSIONS").Item("COW_MINAMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("COW_MINAMNT").Value 
        	Engine.Item("EE_EXTENSIONS").Item("COW_IND_PERIOD").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("COW_IND_PERIOD").Value 
        	Engine.Item("EE_EXTENSIONS").Item("COW_TIME").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("COW_TIME").Value 
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_REINS").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_REINS").Value
        	Engine.Item("EE_EXTENSIONS").Item("REINS_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("REINS_LOI").Value 
        	Engine.Item("EE_EXTENSIONS").Item("REINS_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("REINS_FAP_PERC").Value 
        	Engine.Item("EE_EXTENSIONS").Item("REINS_MIN_AMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("REINS_MIN_AMNT").Value 
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_INCOMP").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_INCOMP").Value 
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_LOP").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_LOP").Value 
        	Engine.Item("EE_EXTENSIONS").Item("LOP_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("LOP_LOI").Value
        	Engine.Item("EE_EXTENSIONS").Item("LOP_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("LOP_FAP_PERC").Value 
        	Engine.Item("EE_EXTENSIONS").Item("LOP_MINAMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("LOP_MINAMNT").Value 
        	Engine.Item("EE_EXTENSIONS").Item("LOP_IND_PERIOD").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("LOP_IND_PERIOD").Value
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_RIOT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_RIOT").Value 
        	Engine.Item("EE_EXTENSIONS").Item("RIOT_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("RIOT_FAP_PERC").Value 
        	Engine.Item("EE_EXTENSIONS").Item("RIOT_MIN_AMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("RIOT_MIN_AMNT").Value
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_TAL").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_TAL").Value
        	Engine.Item("EE_EXTENSIONS").Item("TAL_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("TAL_LOI").Value 
        	Engine.Item("EE_EXTENSIONS").Item("TAL_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("TAL_FAP_PERC").Value 
        	Engine.Item("EE_EXTENSIONS").Item("TAL_MINAMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("TAL_MINAMNT").Value
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_FOE").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_FOE").Value
        	Engine.Item("EE_EXTENSIONS").Item("FOE_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("FOE_LOI").Value 
        	Engine.Item("EE_EXTENSIONS").Item("FOE_FAP_PERC").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("FOE_FAP_PERC").Value 
        	Engine.Item("EE_EXTENSIONS").Item("FOE_MINAMNT").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("FOE_MINAMNT").Value
        	
        	Engine.Item("EE_EXTENSIONS").Item("IS_NASRIA").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("IS_NASRIA").Value 
        	Engine.Item("EE_EXTENSIONS").Item("NASRIA_LOI").Value = Extras.RiskDataEngine.Item("EE_EXTENSIONS").Item("NASRIA_LOI").Value
        	
        	Engine.Item("ELECTEQUIP").Item("ALARM").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ALARM").Value
        	'Type of Exposure
        	Engine.Item("ELECTEQUIP").Item("IS_MPL").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("IS_MPL").Value 
        	Engine.Item("ELECTEQUIP").Item("SYS_MPL").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("SYS_MPL").Value 
        	Engine.Item("ELECTEQUIP").Item("OVR_MPL").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("OVR_MPL").Value
        	
        	Engine.Item("ELECTEQUIP").Item("IS_RB").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("IS_RB").Value 
        	Engine.Item("ELECTEQUIP").Item("RB_DATE").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("RB_DATE").Value
        	
        	Engine.Item("ELECTEQUIP").Item("IS_THEFT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("IS_THEFT").Value 
        	Engine.Item("ELECTEQUIP").Item("THEFT_LIMIT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("THEFT_LIMIT").Value
        	
        	
        	'Electronic Equipment Items
        	iTotalCount = Extras.RiskDataEngine.Item("ELECTEQUIP").Count("ELECTEQ")
        	For iCount = 1 To iTotalCount
        		Engine.Item("ELECTEQUIP").NewObject("ELECTEQ")			
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("DATEADDED").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("DATEADDED").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("CATEG").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("CATEG").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("DESCRIPTN").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("DESCRIPTN").Value
        		
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("S_NUM").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("S_NUM").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("NO_ITEMS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("NO_ITEMS").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("SUMINSURED").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("SUMINSURED").Value
        		
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("IP_NAME").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("IP_NAME").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("IP_AMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("IP_AMOUNT").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MINPERCENT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MINPERCENT").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MINAMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MINAMOUNT").Value
        		Engine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MAXAMOUNT").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("ELECTEQ", iCount).Item("MAXAMOUNT").Value
        		
        		'---------------Business All Risk Grand Child---------------'
        		Dim ClaimGrandChild, RiskGrandChild, GCnt, gIndex
        		Dim RiskObject, ClaimObject, ClaimChild
        		
        		RiskObject = "ELECTEQUIP"
        		ClaimObject = "ELECTEQUIP"
        		ClaimChild = "ELECTEQ"
        		
        		RiskGrandChild = "EE_CLAUSEPREM"
        		ClaimGrandChild = "EE_CLAUSEPREM"
        		GCnt = Extras.RiskDataEngine.Item(RiskObject,iCount).Count(RiskGrandChild)
        		For gIndex = 1 to GCnt
        			Engine.Item(ClaimObject).Item(ClaimChild,iCount).NewObject(ClaimGrandChild)
        			
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"ENDORSE_CAP")
        		Next
        		
        		RiskGrandChild = "EE_CNOTE_DETAILS"
        		ClaimGrandChild = "EE_CNOTE_DETAILS"
        		GCnt = Extras.RiskDataEngine.Item(RiskObject,iCount).Count(RiskGrandChild)
        		For gIndex = 1 to GCnt
        			Engine.Item(ClaimObject).Item(ClaimChild,iCount).NewObject(ClaimGrandChild)
        			
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"DATE_CREATED")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"CREATED_BY")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"COVER_TYPE")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"NOTE_DESCRIPTION")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"NOTE_DETAILS")
        		Next
        		
        		RiskGrandChild = "EE_SCNOTE_DETAILS"
        		ClaimGrandChild = "EE_SCNOTE_DETAILS"
        		GCnt = Extras.RiskDataEngine.Item(RiskObject,iCount).Count(RiskGrandChild)
        		For gIndex = 1 to GCnt
        			Engine.Item(ClaimObject).Item(ClaimChild,iCount).NewObject(ClaimGrandChild)
        			
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"DATE_CREATED")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"CREATED_BY")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"COVER_TYPE")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"NOTE_DESCRIPTION")
        			Call ToGrandChildClaim(RiskObject,RiskGrandChild,ClaimObject,ClaimChild,ClaimGrandChild,iCount,gIndex,"NOTE_DETAILS")
        		Next
        	Next
        	
        	'Multiple Premises
        	iTotalCount = Extras.RiskDataEngine.Item("ELECTEQUIP").Count("EE_MULTIPLE_PREMISES")
        	For iCount = 1 To iTotalCount
        		Engine.Item("ELECTEQUIP").NewObject("EE_MULTIPLE_PREMISES")			
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE1").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE1").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE2").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE2").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE3").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE3").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE4").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("LINE4").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("POSTCODE").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("POSTCODE").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("COUNTRY").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("COUNTRY").Value		
        		Engine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("SUMINSURED").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_MULTIPLE_PREMISES", iCount).Item("SUMINSURED").Value		
        		'Engine.Item("ELECTEQUIP").Item("SASNOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("SASNOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value		
        	
        	Next
        	
        	'Endorsements
        	iTotalCount = Extras.RiskDataEngine.Item("ELECTEQUIP").Count("EE_CLAUSE")
        	For iCount = 1 To iTotalCount
        		Engine.Item("ELECTEQUIP").NewObject("EE_CLAUSE")			
        		Engine.Item("ELECTEQUIP").Item("EE_CLAUSE", iCount).Item("ENDORSE_CAP").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EE_CLAUSE", iCount).Item("ENDORSE_CAP").Value				
        	Next
        	
        	'Electronic Equipment notes (not printed)
        	iTotalCount = Extras.RiskDataEngine.Item("ELECTEQUIP").Count("EENOTE_DETAILS")
        	For iCount = 1 To iTotalCount
        		Engine.Item("ELECTEQUIP").NewObject("EENOTE_DETAILS")	
        		Engine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("DATE_CREATED").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("DATE_CREATED").Value		
        		Engine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("CREATED_BY").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("CREATED_BY").Value	
        		Engine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("Risk_Cover").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("Risk_Cover").Value
        		Engine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("Note_Subject").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("Note_Subject").Value		
        		Engine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EENOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value		
        	Next
        	
        	'Electronic Equipment notes (printed)
        	iTotalCount = Extras.RiskDataEngine.Item("ELECTEQUIP").Count("EESNOTE_DETAILS")
        	For iCount = 1 To iTotalCount
        		Engine.Item("ELECTEQUIP").NewObject("EESNOTE_DETAILS")
        		Engine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("DATE_CREATED").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("DATE_CREATED").Value		
        		Engine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("CREATED_BY").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("CREATED_BY").Value	
        		Engine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("Risk_Cover").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("Risk_Cover").Value
        		Engine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("Note_Subject").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("Note_Subject").Value		
        		Engine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value = Extras.RiskDataEngine.Item("ELECTEQUIP").Item("EESNOTE_DETAILS", iCount).Item("NOTE_DETAILS").Value		
        	Next
        	
        		
        End Sub

        Dim iObjectInstanceCount
        
        Sub FindObjectInstanceCount(strScreenObjectName)
        	iObjectInstanceCount = 1
        
        	' strScreenObjectName is the object that is associate with this screen (if a child), or "" if the root screen.
        	If strScreenObjectName <> ""  Then
        		Dim instanceCount
        		
        		' How many instance of this object exist?
        		instanceCount = engine.count(strScreenObjectName)
        		
        		Dim i
        		for i = 1 to instanceCount
        			if engine.item(strScreenObjectName, i).item("OI").value = vAdditionalData(cAdditionalData_OIKey) then
        				iObjectInstanceCount = i
        			end if
        		next
        	End If
        End Sub

        Sub DefaultTextTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultCommentTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultIntegerTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CLng(strValue)
        End Sub

        
        Sub DefaultCheckboxTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanListTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanRadioTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	If InStr(1, LCase(strValue), "code:", 1) = 1 Then
        		' The default value has been specified as a code (code:<thecode>).
        		Dim code
        		Dim effectiveDate
        		Dim version
        		
        		code = Mid(strValue, Len("code:")+1)
        		effectiveDate = Now()
        		version = 1
        		
        		Dim listItemId
        		listItemId = Extras.GetField(strListCode, strListCode + "_Id", code, effectiveDate, version)
        		
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(listItemId)
        	Else
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        	End If
        End Sub

        
        Sub DefaultRateListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	' TODO.
        End Sub

        
        Sub DefaultDateTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	
        	Dim location
        	Dim Interval
        	Dim Duration
        	Dim DateValue
        	
        	'Upper case the input
        	DateValue = UCase(strValue)
        	'Check to see if we want data AND  Time
        	location = InStr(1,DateValue,"DATETIME")
        	if location > 0 then
        		DateValue=  CDate(FormatDateTime(Now,0)) 'use the standard vb datetime
        	End If
        	'Check to see if TODAY is specified as a modifier
        	location  = InStr(1,DateValue,"TODAY")
        	If location > 0 Then
        		'Determine if we are adding values
        		location  = InStr(1,DateValue,"+")
        		If location > 0 Then 
        			Interval = Mid(DateValue,location + 1,1)
        			
        			If Interval = "Y" Then
        				Interval = "YYYY"
        			End If
        			
        			If Interval <> "" Then 
        				Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        				DateValue = DateAdd(Interval,Duration,CDate(FormatDateTime(Now,2)))	
        				
        			Else
        				'No Interval specified 
        				'Need an error here!!!!
        			End If	
        		Else 
        			'Check to see if we are subtracting values
        			location  =InStr(1,DateValue,"-")
        			If location > 0  Then 
        				Interval = Mid(DateValue,location + 1,1)
        				
        				If Interval <> "" Then 
        					Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        					DateValue = DateAdd(Interval, Duration * -1,CDate(FormatDateTime(Now,2)))	
        				Else
        					'No Interval specified 
        					'Need an error here!!!!
        				End If
        			Else
        				'No Function specified, so assume we are just using today's date as a shortdate
        				DateValue = CDate(FormatDateTime(Now,2))
        			End If
        			
        		End If
        		
        	End If	
        	
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDate(DateValue)
        End Sub

        
        Sub DefaultCurrencyTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

        
        Sub DefaultPercentageTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

Sub WebRequired(bIsOnStart)
	If bIsOnStart = True Then
		Engine.NewObject("GENERAL")
		Engine.NewObject("ADDRESS")
		Engine.NewObject("ELECTEQUIP")
		Engine.NewObject("EE_EXTENSIONS")
	End If
End Sub

Sub onScreenLogic(bIsOnStart)
        
         If bIsOnStart = True Or bIsOnStart = False Then
        	Call GetClaimUserLevel()
        End If
        
         
        
        
        	If bIsOnStart = True Then
        		Call PullFromRiskGeneral()
        		Call PullFromRiskEE()
        		
        		Call DoInstanceCount
        	End If
        End Sub

        
        Sub DoInstanceCount
        ' The ScreenMain rule is added to every screen automatically.
        
        
        Call FindObjectInstanceCount("")
End Sub

Sub onValidate_GENERAL__THIRDPARTY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "THIRDPARTY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__SALVAGE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "SALVAGE", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__RECOVERY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "RECOVERY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_SPM(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_SPM", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_THRDTLS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_THRDTLS", "0", "{listcode}")
        End If
End Sub

Sub onValidate_GENERAL__IS_NAMAPP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("GENERAL", "IS_NAMAPP", "0", "{listcode}")
        End If
End Sub

Sub onValidate_ELECTEQUIP__IS_RB(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("ELECTEQUIP", "IS_RB", "0", "{listcode}")
        End If
End Sub

Sub DoDefaults(bIsOnStart)
    Call WebRequired(bIsOnStart)
    Call onScreenLogic(bIsOnStart)
    Call onValidate_GENERAL__THIRDPARTY(bIsOnStart)
    Call onValidate_GENERAL__SALVAGE(bIsOnStart)
    Call onValidate_GENERAL__RECOVERY(bIsOnStart)
    Call onValidate_GENERAL__IS_SPM(bIsOnStart)
    Call onValidate_GENERAL__IS_THRDTLS(bIsOnStart)
    Call onValidate_GENERAL__IS_NAMAPP(bIsOnStart)
    Call onValidate_ELECTEQUIP__IS_RB(bIsOnStart)
End Sub

Sub Start()
    Call DoDefaults(True)
End Sub

Sub Main()
    Call DoDefaults(False)
End Sub

