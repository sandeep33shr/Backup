        Dim iObjectInstanceCount
        
        Sub FindObjectInstanceCount(strScreenObjectName)
        	iObjectInstanceCount = 1
        
        	' strScreenObjectName is the object that is associate with this screen (if a child), or "" if the root screen.
        	If strScreenObjectName <> ""  Then
        		Dim instanceCount
        		
        		' How many instance of this object exist?
        		instanceCount = engine.count(strScreenObjectName)
        		
        		Dim i
        		for i = 1 to instanceCount
        			if engine.item(strScreenObjectName, i).item("OI").value = vAdditionalData(cAdditionalData_OIKey) then
        				iObjectInstanceCount = i
        			end if
        		next
        	End If
        End Sub

        Sub DefaultTextTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultCommentTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = strValue
        End Sub

        
        Sub DefaultIntegerTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CLng(strValue)
        End Sub

        
        Sub DefaultCheckboxTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanListTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultBooleanRadioTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        End Sub

        
        Sub DefaultListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	If InStr(1, LCase(strValue), "code:", 1) = 1 Then
        		' The default value has been specified as a code (code:<thecode>).
        		Dim code
        		Dim effectiveDate
        		Dim version
        		
        		code = Mid(strValue, Len("code:")+1)
        		effectiveDate = Now()
        		version = 1
        		
        		Dim listItemId
        		listItemId = Extras.GetField(strListCode, strListCode + "_Id", code, effectiveDate, version)
        		
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(listItemId)
        	Else
        		Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CInt(strValue)
        	End If
        End Sub

        
        Sub DefaultRateListTo(strSourceObject, strSourceProperty, strValue, strListCode)
        	' TODO.
        End Sub

        
        Sub DefaultDateTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	
        	Dim location
        	Dim Interval
        	Dim Duration
        	Dim DateValue
        	
        	'Upper case the input
        	DateValue = UCase(strValue)
        	'Check to see if we want data AND  Time
        	location = InStr(1,DateValue,"DATETIME")
        	if location > 0 then
        		DateValue=  CDate(FormatDateTime(Now,0)) 'use the standard vb datetime
        	End If
        	'Check to see if TODAY is specified as a modifier
        	location  = InStr(1,DateValue,"TODAY")
        	If location > 0 Then
        		'Determine if we are adding values
        		location  = InStr(1,DateValue,"+")
        		If location > 0 Then 
        			Interval = Mid(DateValue,location + 1,1)
        			
        			If Interval = "Y" Then
        				Interval = "YYYY"
        			End If
        			
        			If Interval <> "" Then 
        				Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        				DateValue = DateAdd(Interval,Duration,CDate(FormatDateTime(Now,2)))	
        				
        			Else
        				'No Interval specified 
        				'Need an error here!!!!
        			End If	
        		Else 
        			'Check to see if we are subtracting values
        			location  =InStr(1,DateValue,"-")
        			If location > 0  Then 
        				Interval = Mid(DateValue,location + 1,1)
        				
        				If Interval <> "" Then 
        					Duration  = Mid(DateValue,location + 2,Len(DateValue) - (location+1))
        					DateValue = DateAdd(Interval, Duration * -1,CDate(FormatDateTime(Now,2)))	
        				Else
        					'No Interval specified 
        					'Need an error here!!!!
        				End If
        			Else
        				'No Function specified, so assume we are just using today's date as a shortdate
        				DateValue = CDate(FormatDateTime(Now,2))
        			End If
        			
        		End If
        		
        	End If	
        	
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDate(DateValue)
        End Sub

        
        Sub DefaultCurrencyTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

        
        Sub DefaultPercentageTo(strSourceObject, strSourceProperty, strValue, strIgnore)
        	Engine.Item(strSourceObject, iObjectInstanceCount).Item(strSourceProperty).Value = CDbl(strValue)
        End Sub

Sub WebRequired(bIsOnStart)
	If bIsOnStart = True Then
		Engine.NewObject("VAPCLAIM")
		Engine.NewObject("VAP")
		Engine.NewObject("VAPDEP")
		Engine.NewObject("VAPRET")
	End If
End Sub

Sub onScreenLogic(bIsOnStart)
        If bIsOnStart = True Then
        
        		 'Instantiate Risk object(s)
        		Extras.RiskDataEngine.NewObject("VAP")
        		Extras.RiskDataEngine.NewObject("VAPCRED")
        		Extras.RiskDataEngine.NewObject("VAPDEP")
        		Extras.RiskDataEngine.NewObject("VAPRET")
        
        		'Instantiate Claims object(s)
        		Engine.NewObject("VAP")
        		Engine.NewObject("VAPCRED")
        		Engine.NewObject("VAPDEP")
        		Engine.NewObject("VAPRET")
        		'---------------------------------------------------
        		'---START: Non-child screen properties population---		
        		'---------------------------------------------------
        		
        		
        		Dim IsLD, Percent, Amount, Reason, Total
        		Dim Name,Inception_Date 
        		
        		'Collect data from Policy risk
        		'---------------------------Checks Boxes---------------------------------'
        		Dim CreditShortFall, DepProtector, RetToInvoice, typeOfVic
        		typeOfVic = Extras.RiskDataEngine.Item("VAP").Item("VEHTYPE").Value
        		CreditShortFall = Extras.RiskDataEngine.Item("VAP").Item("CRED_SHORTFALL").Value
        		DepProtector = Extras.RiskDataEngine.Item("VAP").Item("DEP_PROTECTOR").Value
        		RetToInvoice = Extras.RiskDataEngine.Item("VAP").Item("RET_INVOICE").Value
        		Engine.Item("VAP").Item("VEHTYPE").Value = typeOfVic
        		
        		Engine.Item("VAP").Item("CRED_SHORTFALL").Value = CreditShortFall
        		Engine.Item("VAP").Item("DEP_PROTECTOR").Value = DepProtector
        		Engine.Item("VAP").Item("RET_INVOICE").Value = RetToInvoice
        		'==========================End Checkboxes================================='
        		
        		'-----------------------Credit Shortfall--------------------------------'
        		Dim KVHGPR, Make, MakeModelDesc, RegDate, EngNo, RegNo, ChasisNo, PurchaseDate,StatSettle, CredShortFall
        		Dim MMCode, Model, Man_Year, Vin_No
        		
        		'KVHGPR = Extras.RiskDataEngine.Item("VAP").Item("KVHGPR").Value
        		MMCode = Extras.RiskDataEngine.Item("VAP").Item("MMCODE").Value
        		Make = Extras.RiskDataEngine.Item("VAP").Item("MAKE").Value
        		Model = Extras.RiskDataEngine.Item("VAP").Item("MODEL").Value
        		Man_Year = Extras.RiskDataEngine.Item("VAP").Item("MAN_YEAR").Value
        		Vin_No = Extras.RiskDataEngine.Item("VAP").Item("VIN_NO").Value
        		
        		MakeModelDesc = Extras.RiskDataEngine.Item("VAP").Item("MAKE_MODEL_DESCRIPTION").Value
        		RegDate = Extras.RiskDataEngine.Item("VAP").Item("ORIGINAL_REG_DATE").Value
        		EngNo = Extras.RiskDataEngine.Item("VAP").Item("ENG_NO").Value 	
        		RegNo = Extras.RiskDataEngine.Item("VAP").Item("REG_NO").Value
        		ChasisNo = Extras.RiskDataEngine.Item("VAP").Item("CHASIS_NO").Value
        		PurchaseDate = Extras.RiskDataEngine.Item("VAP").Item("PURCHASE_DATE").Value
        		StatSettle = Extras.RiskDataEngine.Item("VAPCRED").Item("STAT_SETTLE").Value
        		CredShortFall = Extras.RiskDataEngine.Item("VAPCRED").Item("CREDIT_SHORTFALL_PREMIUM").Value
        	
        		'Send data to the claim screen
        		'Engine.Item("VAP").Item("KVHGPR").Value = KVHGPR
        		Engine.Item("VAP").Item("MMCODE").Value = MMCode
        		Engine.Item("VAP").Item("MAKE").Value = Make
        		Engine.Item("VAP").Item("MODEL").Value = Model
        		Engine.Item("VAP").Item("MAN_YEAR").Value = Man_Year
        		Engine.Item("VAP").Item("VIN_NO").Value = Vin_No
        		
        		Engine.Item("VAP").Item("MAKE_MODEL_DESCRIPTION").Value = MakeModelDesc
        		Engine.Item("VAP").Item("ORIGINAL_REG_DATE").Value = RegDate
        		Engine.Item("VAP").Item("ENG_NO").Value = EngNo
        		Engine.Item("VAP").Item("REG_NO").Value = RegNo
        		Engine.Item("VAP").Item("CHASIS_NO").Value = ChasisNo
        		Engine.Item("VAP").Item("PURCHASE_DATE").Value = PurchaseDate
        		Engine.Item("VAP").Item("STAT_SETTLE").Value = StatSettle
        		Engine.Item("VAP").Item("CREDIT_SHORTFALL_PREMIUM").Value = CredShortFall
        		'---------------------End Credit Shortfall------------------------------'
        		
        		'--------------------------Deposit Protector---------------------------------'
        		Dim DepKVHGPR, DepMake, DepRegDate, DepEngNo, DepRegNo, DepChaseNo, DepPurchaseDate, DepAmt,  DepPrectPremium
        		'DepKVHGPR = Extras.RiskDataEngine.Item("VAPDEP").Item("KVHGPR").Value
        		'DepMake = Extras.RiskDataEngine.Item("VAPDEP").Item("MAKE").Value
        		'DepRegDate = Extras.RiskDataEngine.Item("VAPDEP").Item("REG_DATE").Value
        		'DepEngNo  = Extras.RiskDataEngine.Item("VAPDEP").Item("ENG_NO").Value
        		'DepRegNo  = Extras.RiskDataEngine.Item("VAPDEP").Item("REG_NO").Value
        		'DepChaseNo = Extras.RiskDataEngine.Item("VAPDEP").Item("CHASIS_NO").Value
        		'DepPurchaseDate	= Extras.RiskDataEngine.Item("VAPDEP").Item("PURCHASE_DATE").Value
        		DepAmt	= Extras.RiskDataEngine.Item("VAPDEP").Item("DEP_AMT").Value
        		CredShortFall = Extras.RiskDataEngine.Item("VAPDEP").Item("DEPOSIT_PROTECTOR_PREMIUM").Value
        		
        		'Send data to the claim screen
        	    'Engine.Item("VAPDEP").Item("KVHGPR").Value = DepKVHGPR
        		'Engine.Item("VAPDEP").Item("MAKE").Value = DepMake
        		'Engine.Item("VAPDEP").Item("REG_DATE").Value = DepRegDate
        		'Engine.Item("VAPDEP").Item("ENG_NO").Value = DepEngNo
        		'Engine.Item("VAPDEP").Item("REG_NO").Value = DepRegNo
        		'Engine.Item("VAPDEP").Item("CHASIS_NO").Value = DepChaseNo
        		'Engine.Item("VAPDEP").Item("PURCHASE_DATE").Value = DepPurchaseDate
        		Engine.Item("VAPDEP").Item("DEP_AMT").Value = DepAmt
        		Engine.Item("VAPDEP").Item("DEPOSIT_PROTECTOR_PREMIUM").Value = DepPrectPremium
        		'----------------------End Deposit Protector---------------------------------'
        		
        		'-----------------------Return to Invoice------------------------------------'
        		Dim RetKVHGPR, RetMake, RetRegDate, RetEngNo, RetRegNo, RetChasisNo, RetPurchaseDate, RetPurchAmt, RetReturnToInvPrem
        		'RetKVHGPR = Extras.RiskDataEngine.Item("VAPRET").Item("KVHGPR").Value
        		'RetMake   = Extras.RiskDataEngine.Item("VAPRET").Item("MAKE").Value
        		'RetRegDate = Extras.RiskDataEngine.Item("VAPRET").Item("REG_DATE").Value
        		'RetEngNo  = Extras.RiskDataEngine.Item("VAPRET").Item("ENG_NO").Value
        		'RetRegNo = Extras.RiskDataEngine.Item("VAPRET").Item("REG_NO").Value
        		'RetChasisNo = Extras.RiskDataEngine.Item("VAPRET").Item("CHASIS_NO").Value
        		'RetPurchaseDate = Extras.RiskDataEngine.Item("VAPRET").Item("PURCHASE_DATE").Value
        		RetPurchAmt = Extras.RiskDataEngine.Item("VAPRET").Item("PURCHA_AMT").Value
        		RetReturnToInvPrem = Extras.RiskDataEngine.Item("VAPRET").Item("RETURN_TO_INVOICE_PREMIUM").Value
        		
        		'Engine.Item("VAPRET").Item("KVHGPR").Value = RetKVHGPR
        		'Engine.Item("VAPRET").Item("MAKE").Value = RetMake
        		'Engine.Item("VAPRET").Item("REG_DATE").Value = RetRegDate
        		'Engine.Item("VAPRET").Item("ENG_NO").Value = RetEngNo
        		'Engine.Item("VAPRET").Item("REG_NO").Value = RetRegNo
        		'Engine.Item("VAPRET").Item("CHASIS_NO").Value = RetChasisNo
        		'Engine.Item("VAPRET").Item("PURCHASE_DATE").Value = RetPurchaseDate
        		Engine.Item("VAPRET").Item("PURCHA_AMT").Value = RetPurchAmt
        		Engine.Item("VAPRET").Item("RETURN_TO_INVOICE_PREMIUM").Value = RetReturnToInvPrem
        		'-----------------------End Return to Invoice------------------------------------'
        		
        		Call DoInstanceCount
        End If
        End Sub

        Sub DoInstanceCount
        ' The ScreenMain rule is added to every screen automatically.
        
        
        Call FindObjectInstanceCount("")
End Sub

Sub onValidate_VAPCLAIM__THIRDPARTY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "THIRDPARTY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAPCLAIM__SALVAGE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "SALVAGE", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAPCLAIM__RECOVERY(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "RECOVERY", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAPCLAIM__IS_SPM(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "IS_SPM", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAPCLAIM__IS_THRDTLS(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "IS_THRDTLS", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAPCLAIM__IS_NAMAPP(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultCheckboxTo("VAPCLAIM", "IS_NAMAPP", "0", "{listcode}")
        End If
End Sub

Sub onValidate_VAP__COVERTYPE(bIsOnStart)
        If bIsOnStart = True Then
        	Call DefaultRateListTo("VAP", "COVERTYPE", "1", "MVCOVER")
        End If
End Sub

Sub DoDefaults(bIsOnStart)
    Call WebRequired(bIsOnStart)
    Call onScreenLogic(bIsOnStart)
    Call onValidate_VAPCLAIM__THIRDPARTY(bIsOnStart)
    Call onValidate_VAPCLAIM__SALVAGE(bIsOnStart)
    Call onValidate_VAPCLAIM__RECOVERY(bIsOnStart)
    Call onValidate_VAPCLAIM__IS_SPM(bIsOnStart)
    Call onValidate_VAPCLAIM__IS_THRDTLS(bIsOnStart)
    Call onValidate_VAPCLAIM__IS_NAMAPP(bIsOnStart)
    Call onValidate_VAP__COVERTYPE(bIsOnStart)
End Sub

Sub Start()
    Call DoDefaults(True)
End Sub

Sub Main()
    Call DoDefaults(False)
End Sub

