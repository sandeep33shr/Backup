<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>&lt;i class="fa fa-times-circle" aria-hidden="true"&gt;&lt;/i&gt; Cancel</value>
  </data>
  <data name="btnNewSearch" xml:space="preserve">
    <value>&lt;i class="fa fa-times" aria-hidden="true"&gt;&lt;/i&gt; Clear</value>
  </data>
  <data name="btnOk" xml:space="preserve">
    <value>&lt;i class="fa fa-check" aria-hidden="true"&gt;&lt;/i&gt; Ok</value>
  </data>
  <data name="btnRemove" xml:space="preserve">
    <value>&lt;i class="fa fa-trash" aria-hidden="true"&gt;&lt;/i&gt; Remove</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>&lt;i class="fa fa-search" aria-hidden="true"&gt;&lt;/i&gt; Find</value>
  </data>
  <data name="btnSelect" xml:space="preserve">
    <value>&lt;i class="fa fa-check" aria-hidden="true"&gt;&lt;/i&gt; Select</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>No results found for the criteria entered</value>
  </data>
  <data name="grdPart_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="grdPart_ReinsurerCode" xml:space="preserve">
    <value>Reinsurer Code</value>
  </data>
  <data name="grdPart_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="grdPlacement_AcctType" xml:space="preserve">
    <value>Acct Type</value>
  </data>
  <data name="grdPlacement_Footer_AcctType" xml:space="preserve">
    <value>Total :</value>
  </data>
  <data name="grdPlacement_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="grdPlacement_Participation" xml:space="preserve">
    <value>Participation %</value>
  </data>
  <data name="grdPlacement_Premium" xml:space="preserve">
    <value>Premium</value>
  </data>
  <data name="grdPlacement_ReinsurerCode" xml:space="preserve">
    <value>Reinsurer Code</value>
  </data>
  <data name="grdPlacement_SumInsured" xml:space="preserve">
    <value>Sum Insured [!Currency!]</value>
  </data>
  <data name="grdv_Address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="grdv_Address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="grdv_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="grdv_PostCode" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="grdv_ReinsurerCode" xml:space="preserve">
    <value>Reinsurer Code</value>
  </data>
  <data name="grdv_Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="grdv_Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="lblFileCode" xml:space="preserve">
    <value>File Code</value>
  </data>
  <data name="lblFindReinsurer" xml:space="preserve">
    <value>Find Reinsurer</value>
  </data>
  <data name="lblLower" xml:space="preserve">
    <value>FAC XOL Lower Limit</value>
  </data>
  <data name="lblName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lblReinsurerCode" xml:space="preserve">
    <value>Reinsurer Code</value>
  </data>
  <data name="lblType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="lblUpper" xml:space="preserve">
    <value>FAC XOL Upper Limit</value>
  </data>
  <data name="lbl_pnlFACProp" xml:space="preserve">
    <value>Placement Details</value>
  </data>
  <data name="grdv_AccType" xml:space="preserve">
    <value>Acct Type</value>
  </data>
  <data name="lbl_FACProp_title" xml:space="preserve">
    <value>FAC Prop Placement</value>
  </data>
  <data name="lbl_FACXOL_title" xml:space="preserve">
    <value>POLICY FAC XOL Placement</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>&lt;i class="fa fa-pencil" aria-hidden="true"&gt;&lt;/i&gt; Edit</value>
  </data>
  <data name="btnView" xml:space="preserve">
    <value>&lt;i class="fa fa-eye" aria-hidden="true"&gt;&lt;/i&gt; View</value>
  </data>
  <data name="grdPlacement_AgreeCode" xml:space="preserve">
    <value>Agreement</value>
  </data>
  <data name="grdPlacement_Com" xml:space="preserve">
    <value>Commission [!Currency!]</value>
  </data>
  <data name="grdPlacement_ComPerc" xml:space="preserve">
    <value>Comm %</value>
  </data>
  <data name="grdPlacement_ComTax" xml:space="preserve">
    <value>Commission Tax [!Currency!]</value>
  </data>
  <data name="grdPlacement_Tax" xml:space="preserve">
    <value>Tax [!Currency!]</value>
  </data>
  <data name="grdPlacement_ReinsurerKey" xml:space="preserve">
    <value>Party Key</value>
  </data>
  <data name="FACXOLInVldAmt_Err" xml:space="preserve">
    <value>Please Enter as valid amount</value>
  </data>
  <data name="FACXOLLLOVLPFXP_Err" xml:space="preserve">
    <value>FAC XOL lower limit overlaps with another FAC XOL Layer</value>
  </data>
  <data name="FACXOLLMTOVLPFXP_Err" xml:space="preserve">
    <value>FAC XOL limit overlaps with another FAC XOL Layer</value>
  </data>
  <data name="FACXOLLTGTUT_Err" xml:space="preserve">
    <value>FAC XOL Upper Limit must be greater than FAC XOL Lower Limit</value>
  </data>
  <data name="FACXOLLT_Err" xml:space="preserve">
    <value>FAC XOL Lower Limit must be equal to or greater than 0.01</value>
  </data>
  <data name="FACXOLPremMan_Err" xml:space="preserve">
    <value>Premium is mandatory</value>
  </data>
  <data name="FACXOLTOTPERC_Err" xml:space="preserve">
    <value>Total Participation should be equal to 100.</value>
  </data>
  <data name="FACXOLULLTLL_Err" xml:space="preserve">
    <value>FAC XOL Upper Limit must be less than or equal to Gross Sum Insured less FAC Proportional Sum Insured(s)</value>
  </data>
  <data name="FACXOLULOVLPFXP_Err" xml:space="preserve">
    <value>FAC XOL upper limit overlaps with another FAC XOL Layer</value>
  </data>
  <data name="FACXOLUT_Err" xml:space="preserve">
    <value>FAC XOL Upper Limit must be greater than 0.01</value>
  </data>
  <data name="NoPlacement_Err" xml:space="preserve">
    <value>No Placement Details present to save</value>
  </data>
  <data name="RIBrokerExist_Msg" xml:space="preserve">
    <value>Reinsurer is already on the list.</value>
  </data>
  <data name="RIBroker_Err" xml:space="preserve">
    <value>The Edit of POLICY RI Broker Participants is only relevant and available if the Acc Type equal Broker.</value>
  </data>
  <data name="RIInVldCommPerc_Err" xml:space="preserve">
    <value>Value entered in the Commission % Column must be between 0 &amp; 100 %.</value>
  </data>
  <data name="RIInVldCurrValue_Err" xml:space="preserve">
    <value>Premium must be a valid currency value</value>
  </data>
  <data name="RIInVldFACXOLPrem_Err" xml:space="preserve">
    <value>FAC XOL Premium must be zero when Acct Type is Retained</value>
  </data>
  <data name="RIInVldRate_Err" xml:space="preserve">
    <value>Invalid This Rate Entered</value>
  </data>
  <data name="RIPercVldNo_Err" xml:space="preserve">
    <value>Participation percentage must be a valid numeric between 0 and 100</value>
  </data>
  <data name="RIInVldPartPerc_Err" xml:space="preserve">
    <value>Total Participant percentage should be equal to 100%.</value>
  </data>
  <data name="RIInvalidCommPer_Err" xml:space="preserve">
    <value>Invalid commission % entered</value>
  </data>
  <data name="RINegativePremium_Err" xml:space="preserve">
    <value>Premium must not be a negative value</value>
  </data>
</root>