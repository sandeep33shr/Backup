<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btn_ClearAll" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="btn_ClearAllOutStd" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="btn_Drill" xml:space="preserve">
    <value>Drill</value>
  </data>
  <data name="btn_FindNow" xml:space="preserve">
    <value>&lt;i class="fa fa-search" aria-hidden="true"&gt;&lt;/i&gt; Find</value>
  </data>
  <data name="btn_NewSearch" xml:space="preserve">
    <value>&lt;i class="fa fa-times" aria-hidden="true"&gt;&lt;/i&gt; Clear</value>
  </data>
  <data name="btn_PartPay" xml:space="preserve">
    <value>Part Pay</value>
  </data>
  <data name="btn_Pay" xml:space="preserve">
    <value>&lt;i class="fa fa-credit-card" aria-hidden="true"&gt;&lt;/i&gt; Pay</value>
  </data>
  <data name="btn_SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="btn_SelectAllOutStd" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="Err_InvalidAccountCode" xml:space="preserve">
    <value>Invalid Account Code</value>
  </data>
  <data name="ddl_PaymentGroup_defaulttext" xml:space="preserve">
    <value>All Branches</value>
  </data>
  <data name="lbl_AccountCode" xml:space="preserve">
    <value>Account Code</value>
  </data>
  <data name="lbl_AccountCurrency" xml:space="preserve">
    <value>Account Currency</value>
  </data>
  <data name="lbl_AccountingDate_g" xml:space="preserve">
    <value>Trans. Date</value>
  </data>
  <data name="lbl_AlternateRef" xml:space="preserve">
    <value>Alternate Ref</value>
  </data>
  <data name="lbl_AlternateReference_g" xml:space="preserve">
    <value>Alt. Ref.</value>
  </data>
  <data name="lbl_Amount_g" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="lbl_Branch_g" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="lbl_BranchCode_g" xml:space="preserve">
    <value>Branch</value>
  </data>
  <data name="lbl_Client_g" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="lbl_ClientOutstandingAccountAmount_g" xml:space="preserve">
    <value>Client O/S</value>
  </data>
  <data name="lbl_DateOption" xml:space="preserve">
    <value>Date Option</value>
  </data>
  <data name="lbl_DateTo" xml:space="preserve">
    <value>Date To</value>
  </data>
  <data name="lbl_DocumentRef_g" xml:space="preserve">
    <value>Doc. Ref.</value>
  </data>
  <data name="lbl_DocumentRefOutStd_g" xml:space="preserve">
    <value>Doc. Ref.</value>
  </data>
  <data name="lbl_EffectiveDate" xml:space="preserve">
    <value>Effective Date</value>
  </data>
  <data name="lbl_EffectiveDate_g" xml:space="preserve">
    <value>Effective Date</value>
  </data>
  <data name="lbl_ErrMsg_Branch" xml:space="preserve">
    <value>Please select a valid account</value>
  </data>
  <data name="lbl_Page_header" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="lbl_MarkedAmount_g" xml:space="preserve">
    <value>Marked</value>
  </data>
  <data name="lbl_MarkedStatus" xml:space="preserve">
    <value>Marked Status</value>
  </data>
  <data name="lbl_MediaRef_g" xml:space="preserve">
    <value>Media Ref</value>
  </data>
  <data name="lbl_Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="lbl_OutstandingAmount_g" xml:space="preserve">
    <value>O/S Amount</value>
  </data>
  <data name="lbl_OutstandingTransaction" xml:space="preserve">
    <value>Outstanding Transaction Details</value>
  </data>
  <data name="lbl_PaidAccountAmount_g" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="lbl_Partypay" xml:space="preserve">
    <value>Part Pay</value>
  </data>
  <data name="lbl_PaymentGroup" xml:space="preserve">
    <value>Payment Group</value>
  </data>
  <data name="lbl_InsurerPayments_Header" xml:space="preserve">
    <value>Insurer / Agent Payment</value>
  </data>
  <data name="lbl_PeriodName_g" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="lbl_Reference_g" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="lbl_ResolvedName_g" xml:space="preserve">
    <value>Client Code</value>
  </data>
  <data name="lbl_select" xml:space="preserve">
    <value>&lt;i class="fa fa-check" aria-hidden="true"&gt;&lt;/i&gt; Select</value>
  </data>
  <data name="lbl_TotalMarked" xml:space="preserve">
    <value>Total Marked</value>
  </data>
  <data name="lbl_TotalWriteOff" xml:space="preserve">
    <value>Total WriteOff</value>
  </data>
  <data name="lbl_TransactionCurrency" xml:space="preserve">
    <value>Transaction Currency</value>
  </data>
  <data name="lbl_TransactionDate" xml:space="preserve">
    <value>Transaction Date </value>
  </data>
  <data name="lbl_ValidationSummary" xml:space="preserve">
    <value>&lt;h2&gt;There are errors on this page&lt;/h2&gt;&lt;p&gt;Please review these errors and re-submit the form&lt;/p&gt;</value>
  </data>
  <data name="lbl_ViewBy" xml:space="preserve">
    <value>View By</value>
  </data>
  <data name="lblResultInsurerPayments_g" xml:space="preserve">
    <value>Transactions</value>
  </data>
  <data name="lblResultOutstandingTransactions_g" xml:space="preserve">
    <value>Outstanding Transaction Details</value>
  </data>
  <data name="titleExpandCollapse" xml:space="preserve">
    <value>Click to expand/collapse</value>
  </data>
  <data name="Err_NoWildCard" xml:space="preserve">
    <value>No Wild card is allowed</value>
  </data>
  <data name="Err_WildCardAtEnd" xml:space="preserve">
    <value>No wild card except at the end please</value>
  </data>
  <data name="btn_Allocate" xml:space="preserve">
    <value>Allocate</value>
  </data>
  <data name="Err_MarkedAmount" xml:space="preserve">
    <value>Balance is not zero</value>
  </data>
  <data name="Err_SelectTransaction" xml:space="preserve">
    <value>Please select a transaction</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>No results found for the criteria entered</value>
  </data>
  <data name="lbl_AllocationPeriod" xml:space="preserve">
    <value>Allocation Period</value>
  </data>
  <data name="lbl_Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="lbl_AllocPeriod_g" xml:space="preserve">
    <value>Allocation Period</value>
  </data>
  <data name="lbl_AllPeriod_g" xml:space="preserve">
    <value>Allocation Period</value>
  </data>
  <data name="lbl_DateTo_Range_Err" xml:space="preserve">
    <value>Please enter the force to date in format (DD/MM/YYYY)</value>
  </data>
  <data name="lbl_DupSRPSPYError" xml:space="preserve">
    <value>This payment would result in an SRP being generated and there is already an SPY or SRP in the list and you cannot allocate more than one in a single Allocation</value>
  </data>
  <data name="lbl_SingleSRPSPYError" xml:space="preserve">
    <value>You can only allocate 1 SRP or 1 SPY in a single allocation with other transaction types</value>
  </data>
  <data name="lbl_DueDate_g" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="lbl_query" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="lblReport" xml:space="preserve">
    <value>Remittance_Advice_Agency\</value>
  </data>
  <data name="lblPolicyNumber" xml:space="preserve">
    <value>Policy Number</value>
  </data>
</root>