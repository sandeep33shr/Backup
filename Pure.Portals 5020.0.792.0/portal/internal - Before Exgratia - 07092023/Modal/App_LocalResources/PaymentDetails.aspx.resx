<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>&lt;i class="fa fa-times-circle" aria-hidden="true"&gt;&lt;/i&gt; Cancel</value>
  </data>
  <data name="btnOk" xml:space="preserve">
    <value>&lt;i class="fa fa-check" aria-hidden="true"&gt;&lt;/i&gt; OK</value>
  </data>
  <data name="lbl_BalanceAmount" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="lbl_Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="lbl_Currency_Error" xml:space="preserve">
    <value>Please Select Currency value </value>
  </data>
  <data name="lbl_CurrencyRate" xml:space="preserve">
    <value>Currency Rate</value>
  </data>
  <data name="lbl_NetPayment" xml:space="preserve">
    <value>Net Payment</value>
  </data>
  <data name="lbl_NetReceived" xml:space="preserve">
    <value>Net Received</value>
  </data>
  <data name="lbl_Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="lbl_Payment_Error" xml:space="preserve">
    <value>Please Enter Proper Payment Amount</value>
  </data>
  <data name="lbl_PaymentAmount" xml:space="preserve">
    <value>Payment Amount</value>
  </data>
  <data name="lbl_PaymentCannotExceedReserveConfirmMsg" xml:space="preserve">
    <value>Payment amount entered cannot be accepted as it exceeds the reserve</value>
  </data>
  <data name="lbl_PaymentConfirmMsg" xml:space="preserve">
    <value>The Specified amount is greater than the remaining reserve amount. The reserve amount will be adjusted and reduced to zero following this payment.Do you wish to continue?</value>
  </data>
  <data name="lbl_PaymentDetails" xml:space="preserve">
    <value>Recovery Details</value>
  </data>
  <data name="lbl_ReceiptCurrency" xml:space="preserve">
    <value>Receipt Currency</value>
  </data>
  <data name="lbl_ReceivedAmount" xml:space="preserve">
    <value>Received Amount</value>
  </data>
  <data name="lbl_Reserve" xml:space="preserve">
    <value>Reserve</value>
  </data>
  <data name="lbl_TaxAmount" xml:space="preserve">
    <value>Tax Amount</value>
  </data>
  <data name="lbl_taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="lbl_TaxGroup" xml:space="preserve">
    <value>Tax Group</value>
  </data>
  <data name="lbl_TaxGroup_Error" xml:space="preserve">
    <value>Please Select taxGroup</value>
  </data>
  <data name="lbl_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="lbl_ValidationSummary" xml:space="preserve">
    <value>&lt;h2&gt;There are errors on this page&lt;/h2&gt;&lt;p&gt;Please review these errors and re-submit the form&lt;/p&gt;</value>
  </data>
  <data name="lblReceiptCurrency" xml:space="preserve">
    <value>Receipt Currency</value>
  </data>
  <data name="lt_Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="lt_LossCurrency" xml:space="preserve">
    <value>Loss Currency</value>
  </data>
  <data name="lt_PaidToDate" xml:space="preserve">
    <value>Paid To Date</value>
  </data>
  <data name="lt_PaymentCurrency" xml:space="preserve">
    <value>Payment Currency</value>
  </data>
  <data name="lt_RecoveryType" xml:space="preserve">
    <value>For Recovery Type</value>
  </data>
  <data name="lt_ReserveType" xml:space="preserve">
    <value>For Reserve Type</value>
  </data>
  <data name="lt_ReverseExcess" xml:space="preserve">
    <value>Reverse Excess</value>
  </data>
  <data name="lt_RiskType" xml:space="preserve">
    <value>Risk Type</value>
  </data>
  <data name="lt_TotalRecovery" xml:space="preserve">
    <value>Total Recovery</value>
  </data>
  <data name="lt_TotalReserve" xml:space="preserve">
    <value>Total Reserve</value>
  </data>
  <data name="ltReceipt" xml:space="preserve">
    <value>Receipt</value>
  </data>
  <data name="ltReceivedToDate" xml:space="preserve">
    <value>Received To Date</value>
  </data>
  <data name="lbl_ReceiptDetails" xml:space="preserve">
    <value>Recovery Details</value>
  </data>
  <data name="liDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="lbl_TaxGroupMandatory" xml:space="preserve">
    <value>Tax Group is mandatory</value>
  </data>
  <data name="lbl_cvAllowMultipleClaimPayment_error" xml:space="preserve">
    <value>You cannot add any further payments as the maximum value of unauthorised claim payments has been reached.</value>
  </data>
  <data name="lbl_InvalidPayment" xml:space="preserve">
    <value>Please enter valid payment amount</value>
  </data>
  <data name="lblScriptedTaxamount" xml:space="preserve">
    <value>Scripted  Tax</value>
  </data>
  <data name="lblPaymentDetails" xml:space="preserve">
    <value>Payment Details</value>
  </data>
  <data name="lblReceiptDetails" xml:space="preserve">
    <value>Receipt Details</value>
  </data>
</root>